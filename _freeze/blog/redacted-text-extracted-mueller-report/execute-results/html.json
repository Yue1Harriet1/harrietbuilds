{
  "hash": "02f208d15b144ca47a3a1e39a704b8c5",
  "result": {
    "markdown": "---\ntitle: The Redacted, Text-Extracted Mueller Report\nauthor: Garrick Aden-Buie\ndescription: Visualizing extracted text from the Redacted Mueller Report using ggpage.\nimages:\n  - \"/blog/2019/2019-04-18-the-redacted-text-extracted-mueller-report_files/figure-html/mueller-ggpage-1.png\"\ndate: '2019-04-18'\nslug: redacted-text-extracted-mueller-report\ncategories:\n  - Blog\ntags:\n  - R\n  - pdftools\n  - ggpage\n  - Visualization\n---\n\n\n[latimes-all-pages]: https://www.latimes.com/projects/la-na-mueller-investigation-report-trump-redaction/#nt=oft-Double%20Chain~Flex%20Feature~~document-841a~~1~yes-art~curated~curatedpage\n[report-released]: https://www.npr.org/2019/04/18/708850903/read-the-full-mueller-report-with-redactions\n[github-mueller-report]: https://github.com/gadenbuie/mueller-report\n[pdftools]: https://github.com/ropensci/pdftools\n[ropensci]: https://ropensci.org/\n[pdf-source]: https://www.documentcloud.org/documents/5955210-Redacted-Mueller-Report.html\n[dataeditor]: https://twitter.com/dataeditor\n[wsj-12pct-redacted]: https://www.wsj.com/livecoverage/mueller-report-release-latest-news/card/1555613011\n[ggpage]: https://emilhvitfeldt.github.io/ggpage/\n[ggplot2]: https://ggplot2.tidyverse.org\n[ggthemes]: https://jrnold.github.io/ggthemes/index.html\n[stupid-watergate]: https://www.youtube.com/watch?v=FVFdsl29s_Q\n\n\n\n\n\nEarlier today, the redacted Mueller report was [released to the public][report-released].\nOnly about [12% of the report is redacted][wsj-12pct-redacted], but 100% of it is inside what's essentially a scanned PDF.\n\nThere are many people interested in [taking a deeper look at the report](https://twitter.com/AOC/status/1118989661555372033), whether within the U.S. government, as citizens, or as data scientists.\n\nRather than disect the report and its political implications, I'm going to use open-source tools to [extract the text from the report](#pdftools).\nI'm also going to take advantage of the opportunity to use a new R package I've been wanting to try, <span class=\"pkg\">ggpage</span> by [Emil Hvitfeldt][ggpage] to [visualize the report's pages](#ggpage-plot) and highlight the most-often referenced people in the report.\n\n## Extracting the report text with pdftools {#pdftools}\n\nI used the <span class=\"pkg\">[pdftools]</span> package by [ROpenSci] to extract the text from the document, using the report posted by [&commat;dataeditor][dataeditor] of the Washington Post, [available here][pdf-source].\nExtracting the text was as simple as downloading the PDF and running `pdftools::pdf_text()`.\nI added page and line numbers to the extracted text and stored the result as a CSV that you can download from the [GitHub repository][github-mueller-report].\n\n```r\nlibrary(tidyverse)\nlibrary(pdftools)\n\n# Download report from link above\nmueller_report_txt <- pdf_text(\"Redacted-Mueller-Report.pdf\")\n\nmueller_report <- tibble(\n  page = 1:length(mueller_report_txt),\n  text = mueller_report_txt\n) %>%\n  separate_rows(text, sep = \"\\n\") %>%\n  group_by(page) %>%\n  mutate(line = row_number()) %>%\n  ungroup() %>%\n  select(page, line, text)\n\nwrite_csv(mueller_report, \"mueller_report.csv\")\n```\n\nGrab the code and resulting data from [gadenbuie/mueller-report][github-mueller-report] on GitHub.\n\n## Visualizing the report pages with ggpage {#ggpage}\n\nThe LA Times published an widely-shared piece visualizing [each of the pages of the Mueller report][latimes-all-pages], and Nathan Yau of [Flowing Data](https://flowingdata.com) shows [how to create this image](https://flowingdata.com/2019/04/18/redacted/) using `pdftools::pdf_convert()`.\n\n<a href=\"wsj-redacted-mueller-report.jpg\" data-featherlight=\"image\">\n<div class=\"figure\">\n<img src=\"wsj-redacted-mueller-report.jpg\" alt=\"\">\n<p class=\"caption\">Source: <a href='https://www.latimes.com/projects/la-na-mueller-investigation-report-trump-redaction/#nt=oft-Double%20Chain~Flex%20Feature~~document-841a~~1~yes-art~curated~curatedpage'>LA Times</a></p>\n</div>\n</a>\n\nRecently, Emil Hvitfeldt released <span class=\"pkg\">[ggpage]</span>, a package that lets you create a page-layout visualization using <span class=\"pkg\">[ggplot2]</span>.\nWhile the package uses the text content of the document only --- so the visualized text layout doesn't completely match the layout of the original document --- it does allow you to highlight text elements, like mentions of any of the recurring cast of characters in [Stupid Watergate][stupid-watergate].\n\nThe first step is to load the text version of the Mueller report.\nYou can see from the first few lines of the data that the OCR really struggled with the header that appears at the top of each page and has been crossed out with a single line.\n(The redacted text is less confusing to the OCR because it's rendered in solid black and generally results in blank space.)\n\n\n::: {.cell hash='redacted-text-extracted-mueller-report_cache/html/load_641c158549b378c2c817e7422b6fd924'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggpage)\n\nmueller_report_csv <- \"https://raw.githubusercontent.com/gadenbuie/mueller-report/ab74012b0532ffa34f3a45196d2b28004e11b9c2/mueller_report.csv\"\n\nmueller_report <- read_csv(mueller_report_csv)\n\nmueller_report\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19,195 × 3\n    page  line text                                             \n   <dbl> <dbl> <chr>                                            \n 1     1     1 \"U.S. Department of Justice\"                     \n 2     1     2 \"AttarAe:,c\\\\\\\\'erlc Predtiet // Mtt; CeA1:ttiA\" \n 3     1     3 \"Ma1:ertalPrn1:eetedUAder Fed. R. Crhtt. P. 6(e)\"\n 4     1     4 \"Report On The Investigation Into\"               \n 5     1     5 \"Russian InterferenceIn The\"                     \n 6     1     6 \"2016 PresidentialElection\"                      \n 7     1     7 \"Volume I of II\"                                 \n 8     1     8 \"Special Counsel Robert S. Mueller, III\"         \n 9     1     9 \"Submitted Pursuant to 28 C.F.R. § 600.8(c)\"     \n10     1    10 \"Washington, D.C.\"                               \n# … with 19,185 more rows\n```\n:::\n:::\n\n\nThe core of the next step is to pass the `mueller_report` to `ggpage::ggpage_build()`.\nBefore doing that, though, I pad each page to make sure they have the same number of lines.\nThe `ggpage_build()` function tokenizes the text into individual `word`s, so I then use `str_detect()` to find mentions of the key players.\n\n\n::: {.cell hash='redacted-text-extracted-mueller-report_cache/html/ggpage_build_36f59f8b95155086ce99cfba5202f457'}\n\n```{.r .cell-code}\nmueller_pages <-\n  mueller_report %>%\n  # pad pages with fewer lines than expected\n  complete(\n    page,\n    line = 1:max(mueller_report$line),\n    fill = list(text = \"\")\n  ) %>%\n  # Pre-process for {ggpage}\n  ggpage_build(\n    ncol = 30,\n    bycol = FALSE,\n    page.col = \"page\",\n    wtl = FALSE,\n    x_space_pages = 10,\n    y_space_pages = 100\n  ) %>%\n  mutate(\n    color = case_when(\n      str_detect(word, \"trump|president\") ~ \"Trump\",\n      str_detect(word, \"russia\")     ~ \"Russia\",\n      str_detect(word, \"cohen\")      ~ \"Cohen\",\n      str_detect(word, \"co(m|rn)ey\") ~ \"Comey\",\n      str_detect(word, \"flynn\")      ~ \"Flynn\",\n      str_detect(word, \"manafort\")   ~ \"Manafort\",\n      str_detect(word, \"sessions\")   ~ \"Sessions\",\n      str_detect(word, \"mcgahn\")     ~ \"McGahn\",\n      TRUE ~ \"normal\"\n    ),\n    color = factor(color, c(\n      \"Trump\", \"Russia\", \"Cohen\", \"Comey\",\n      \"Flynn\", \"Manafort\", \"Sessions\", \"McGahn\", \"normal\"\n    ))\n  )\n\nmueller_pages\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 207,165 × 9\n   word        page  line  xmin  xmax  ymin  ymax index_line color \n   <chr>      <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <chr>      <fct> \n 1 u.s            1     1   175   172  -204  -207 1-1        normal\n 2 department     1     1   186   176  -204  -207 1-1        normal\n 3 of             1     1   189   187  -204  -207 1-1        normal\n 4 justice        1     1   197   190  -204  -207 1-1        normal\n 5 washington     1    10   182   172  -240  -243 1-10       normal\n 6 d.c            1    10   186   183  -240  -243 1-10       normal\n 7 march          1    11   177   172  -244  -247 1-11       normal\n 8 2019           1    11   182   178  -244  -247 1-11       normal\n 9 attarae        1     2   179   172  -208  -211 1-2        normal\n10 c              1     2   181   180  -208  -211 1-2        normal\n# … with 207,155 more rows\n```\n:::\n:::\n\n\nThe following bit of code sets up the color palette, which is derived from the Libre Office Calc theme provided by <span class=\"pkg\">[ggthemes]</span>.\n\n\n::: {.cell hash='redacted-text-extracted-mueller-report_cache/html/plot-colors_71f8a0afc26954f66cf2a9dd7dbc5847'}\n\n```{.r .cell-code}\n# manually assigned colors from ggthemes::pal_calc()\ncolors <- rep(\"\", length(levels(mueller_pages$color)))\nnames(colors) <- levels(mueller_pages$color)\ncolors[\"Trump\"]    <- \"#FF4023\"\ncolors[\"Russia\"]   <- \"#004983\"\ncolors[\"Cohen\"]    <- \"#FF922E\"\ncolors[\"Comey\"]    <- \"#559B30\"\ncolors[\"Flynn\"]    <- \"#4D276D\"\ncolors[\"Manafort\"] <- \"#7BCAFD\"\ncolors[\"Sessions\"] <- \"#7F1327\"\ncolors[\"McGahn\"]   <- \"#FFD040\"\ncolors[\"normal\"]   <- \"#d0d0d0\"\n```\n:::\n\n\nFinally, `ggpage_plot()` from <span class=\"pkg\">ggpage</span> creates the <span class=\"pkg\">ggplot2</span> page layout, and adding the fill aesthetic using the manual color scale defined above adds color highlights for mentions of Trump, Russia, and others.\n\n\n::: {.cell hash='redacted-text-extracted-mueller-report_cache/html/mueller-ggpage_df3150ed0af5e8f59a7fc6641eabc64d'}\n\n```{.r .cell-code}\nggpage_plot(mueller_pages) +\n  aes(fill = color) +\n  scale_fill_manual(\n    values = colors,\n    breaks = setdiff(names(colors), \"normal\")\n  ) +\n  labs(fill = NULL, caption = \"@grrrck\") +\n  guides(fill = guide_legend(nrow = 1)) +\n  theme(legend.position = \"bottom\")\n```\n:::\n\n\n<a name=\"ggpage-plot\"></a>\n\n<a href=\"redacted-text-extracted-mueller-report_files/figure-html/mueller-ggpage-1.png\" data-featherlight=\"image\">\n<div class=\"figure\">\n<img src=\"redacted-text-extracted-mueller-report_files/figure-html/mueller-ggpage-1.png\" alt=\"\">\n<p class=\"caption\"></p>\n</div>\n</a>\n\n_Click the image to expand._\n\n***\n\nIf you use the data for an interesting visualization or analysis, please [let me know on Twitter](https://twitter.com/grrrck)!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}