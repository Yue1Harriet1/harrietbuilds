{
  "hash": "ba664871e313aac92375a40d32871155",
  "result": {
    "markdown": "---\ntitle: Make A Shortcut for Anything in RStudio with shrtcts\nauthor: Garrick Aden-Buie\ndate: '2020-05-02'\nslug: shrtcts\ncategories:\n  - Blog\ntags:\n  - RStudio\n  - R\n  - R Package\n  - Addin\n  - Shortcuts\ndescription: Quickly turn any R function or code into an RStudio addin with {shrtcts}\nsource_link: 'https://github.com/gadenbuie/garrickadenbuie-com/blob/main/content/blog/2020/2020-05-02-make-a-shortcut-for-anything-in-rstudio-with-shtrcts.Rmarkdown'\nkeywords: rstats\neditor_options:\n  chunk_output_type: console\n---\n\n\n<!-- Links -->\n\n\n\n\n\n[shrtcts]: https://github.com/gadenbuie/shrtcts\n[rstudio-keyboard-shortcuts]: https://support.rstudio.com/hc/en-us/articles/200711853-Keyboard-Shortcuts\n[rstudio-customize-shortcuts]: https://support.rstudio.com/hc/en-us/articles/206382178-Customizing-Keyboard-Shortcuts\n[rstudio-addins]: https://rstudio.github.io/rstudioaddins/\n[addinslist]: https://github.com/daattali/addinslist\n[rsam]: https://github.com/yonicd/rsam\n\n<!-- https://buttons.github.io/ -->\n<a class=\"github-button\" href=\"https://github.com/gadenbuie\" data-show-count=\"true\" aria-label=\"Follow @gadenbuie on GitHub\">Follow&commat;gadenbuie</a>&nbsp;\n<a class=\"github-button\" href=\"https://github.com/gadenbuie/shrtcts\" data-icon=\"octicon-star\" data-show-count=\"true\" aria-label=\"Star gadenbuie/shrtcts on GitHub\">Star</a>&nbsp;\n<a class=\"github-button\" href=\"https://github.com/gadenbuie/shrtcts/fork\" data-icon=\"octicon-repo-forked\" data-show-count=\"true\" aria-label=\"Fork gadenbuie/shrtcts on GitHub\">Fork</a>\n\nRStudio's many [keyboard shortcuts][rstudio-keyboard-shortcuts]\ntake some time to learn but can save tons of typing in the long run.\n[RStudio addins][rstudio-addins]\nextend RStudio's interface with small apps and actions,\nand you can\n[assign customized keyboard shortcuts][rstudio-customize-shortcuts]\nto trigger any addin you have installed quickly from the keyboard.\n\nInstalling an addin isn't hard ---\nand if you're looking for new addins,\nDean Attali's [addinslist] is the place to go.\nBut addins are installed via R packages,\nso if you want to create your own addin,\nyou'll have to create a new R package to store your addin.\nAnd if you have to create a new R package,\nyou'll need to think of a name for your R package.\nBut naming is hard,\nand all the good words starting with or involving\nthe letter R\nare already taken.\n\nWhat if all you want to do is run\na function from an installed package\nor a short bit of R code that does something useful\nand that makes your workflow just a little smoother?\n\nWhat if you want that function to run\nwhenever you press\n<kbd>Control</kbd> + <kbd>Alt</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd>?\n\nIt seems like there should be an easier way to do this\nthan to create an R package.\n\n(_Have I convinced you that you also have the same problem I do,\nor am I the only one?_)\n\n## Update September 14, 2020\n\n<span class=\"pkg\">shrtcts</span> now has [a dedicated site](https://pkg.garrickadenbuie.com/shrtcts),\nand a slightly different syntax than the first version presented below.\nYou can now write your [shortcut functions in R files](https://pkg.garrickadenbuie.com/shrtcts/articles/shrtcts.html#quick-intro)\nand use <span class=\"pkg\">roxygen2</span> documentation strings to [configure your shortcuts](https://pkg.garrickadenbuie.com/shrtcts/articles/shrtcts.html#shrtcts-r-format).\nYou can also [set keyboard shortcuts](https://pkg.garrickadenbuie.com/shrtcts/articles/shrtcts.html#declare-keyboard-shortcuts-in--shrtcts-r)\nfor your <span class=\"pkg\">shrtcts</span> shortcuts directly in the configuration R script.\n\n## Introducing shrtcts\n\n<span class=\"pkg\">[shrtcts]</span> is a small package I've put together\nwith the goal of making it easier\nto register and manage RStudio addins\nwithout having to maintain an R package.\n\n### Getting started\n\nFirst, **install shrtcts**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremotes::install_github(\"gadenbuie/shrtcts\")\n```\n:::\n\n\nThen, **create a YAML file** called `.shrtcts.yaml`\nand store it in your home directory[^home]\nor in a directory called `.config` in your home directory.\n\n[^home]: You can find you home directory quickly using `fs::path_home_r()` or `fs::path_home()`. [shrtcts</span> will look in either location.\n\nThis YAML file holds your shortcuts as a YAML list.\nEach item looks a lot like the\n[addins.dcf](https://rstudio.github.io/rstudioaddins/#registering-addins)\nfile that is used to register addins in R packages.\nThe only difference is that the `Binding` entry\ncan be any arbitrary R function or code.\n\n```yaml\n- Name: Say Something Nice\n  Description: A demo of cool things\n  Binding: praise::praise\n  Interactive: true\n```\n\nI'm calling this shortcut\n_Say Something Nice_\nand whenever it is triggered it calls\n`praise()` from the\n<span class=\"pkg\">[praise](https://github.com/rladies/praise)</span> package.\n\nTo **install your shortcut**,\nrun `add_rstudio_addin()` from <span class=\"pkg\">shrtcts</span>\nand restart your R session.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshrtcts::add_rstudio_shortcuts()\nrstudioapi::restartSession()\n```\n:::\n\n\nYou can restart your R session by clicking _Session_ > _Restart R_.\nNow you should now be able to find\nthe _Say Something Nice_ addin in your addins list!\n\n<img alt=\"Our first RStudio shortcut!\"\n     title=\"Our first RStudio shortcut!\"\n     src=\"shrtcts-addin-nice.png\"\n     width=\"330px\"\n     style=\"max-width: 100%; margin-left: auto; margin-right: auto;\" />\n\n### Shortcut, meet keyboard\n\n#### Assigning keyboard shortcuts to your addin shortcuts\n\nOnce you've installed your shortcut addins,\nyou can then assign a keyboard shortcut to run your addin.\nSelect _Modify Keyboard Shortcuts..._\nfrom the _Tools_ menu\n\n<img alt=\"RStudio 'Modify Keyboard Shortcuts' item in the 'Tools' menu\"\n     title=\"RStudio 'Modify Keyboard Shortcuts' item in the 'Tools' menu\"\n     src=\"rstudio-menu-modify-shortcuts.png\"\n     width=\"360px\"\n     style=\"max-width: 100%; margin-left: auto; margin-right: auto;\" />\n\nand then search for your shortcut.\nClick on the blank space in the _Shortcut_ column\nand press the keys that will be the your new shortcut.\nHere, I'm assigning the _Say Something Nice_ addin to\n<kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>P</kbd>.\n\n<img alt=\"Setting the keyboard shortcut for the 'Say Something Nice' addin\"\n     title=\"Setting the keyboard shortcut for the 'Say Something Nice' addin\"\n     src=\"rstudio-keyboard-shortcut-menu.png\"\n     width=\"800px\"\n     style=\"max-width: 100%; margin-left: auto; margin-right: auto;\" />\n\nAfter setting the shortcut,\nI usually check to make sure my new keyboard shortcut\ndoesn't collide with a previously installed shortcut\nby clearing the search and sorting by the shortcut column.\n\n#### A few details to keep in mind about keyboard shortcuts\n\nThere are a two things to keep in mind about using keyboard shortcuts\nwith your <span class=\"pkg\">shrtcts</span> shortcuts.\n\nFirst, if you re-install or update <span class=\"pkg\">shrtcts</span>,\nyour currently existing keyboard shortcuts should survive the transition.\nMake sure that you run `add_rstudio_addins()` again after updating,\nand make sure that you re-start your R session.\n\nSecond, the order of your shortcuts in your `.shrtcts.yaml` file matters,\nunless you explicitly set the `id` entry to a number between 1 and 100.\nThis means that it's a good idea to set the `id`\nof shortcuts that you're going to use with keyboard shortcuts.\n\n\n```yaml\n- Name: Say Something Nice\n  Description: A demo of cool things\n  Binding: praise::praise\n  id: 1\n  Interactive: true\n```\n\n### Adding more shortcuts\n\nTo add more shortcuts,\ncontinue adding entries in your `.shrtcts.yaml` file.\nIf you don't want to run `add_rstudio_shortcuts()`\nevery time you update your shortcuts,\nyou can add the following line in your `~/.Rprofile`[^rprofile].\n\n[^rprofile]: A quick way to edit this file is by calling `usethis::edit_r_profile()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (interactive() & requireNamespace(\"shrtcts\", quietly = TRUE)) {\n  shrtcts::add_rstudio_shortcuts()\n}\n```\n:::\n\n\n<span class=\"pkg\">shrtcts</span> comes with a demonstration `.shrtcts.yaml` file\nthat you can use for inspiration.\nPrint out the example YAML file contents with:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshrtcts::example_shortcuts_yaml()\n```\n:::\n\n\n### Shortcuts can be arbitrary R code\n\nYour shortcut doesn't need to call a function in a package.\nIn fact,\nyou can create shortcuts that run R code\nsimply by putting the code you want to run in the `Binding` entry.\n\nHere's an example shortcut that picks a number between 0 and 100.\n(Great for playing _what number of am I think of?_)\n\n```yaml\n- Name: I'm thinking of a number...\n  Binding: sample(0:100, 1)\n```\n\nNotice the binding is just R code\n(I was thinking of 67, by the way),\nand the only fields you _need_ to include\nare the `Name` and the `Binding`.\n\nYour shortcuts don't need to fit on a single line either.\nYou can use\n[multi-line literal-style YAML blocks](https://yaml-multiline.info/)\nfor your R code.\nIn other words, add `|` after `Binding` and then indent your R code.\n\nHere's an example shortcut that I use occasionally\nto create a temporary markdown file\nso that I can test some markdown or R code\nand have the file be thrown away when I exit my R session.\n\n```yaml\n- Name: New Temporary R Markdown Document\n  Binding: |\n    tmp <- tempfile(fileext = \".Rmd\")\n    rmarkdown::draft(\n      tmp,\n      template = \"github_document\",\n      package = \"rmarkdown\",\n      edit = FALSE\n    )\n    rstudioapi::navigateToFile(tmp)\n  Interactive: false\n```\n\n## Behind the Scenes\n\nHow does this all work?\n<span class=\"pkg\">shrtcts</span> comes with a minimal addins registry\nwith one addin that browses to the help page `?add_rstudio_addins`.\n\nWhen you run `add_rstudio_addins()`,\n<span class=\"pkg\">shrtcts</span> rewrites it's own addins registry\nusing your shortcut title and description.\nIt also assigns each shortcut in `.shrtcts.yaml`\nto an id from 1 to 100,\nwhich correspond to 100 shortcut functions\nin the <span class=\"pkg\">shrtcts</span> package.\nEach addin is wired to one of these functions,\nso when you run the associated addin\n<span class=\"pkg\">shrtcts</span> looks up the correct shortcut in your\n`.shrtcts.yaml` file and runs that shortcut.\n\nThis why you need to run `add_rstudio_addins()`\nwhenever you add or modify _the order_ of your shortcuts.\nWhenever this happens, <span class=\"pkg\">shrtcts</span> has to re-wire\nthe addins registry to make sure everything is connect.\n\nThis is also why you need to restart your R session\nfor the addins to be seen by RStudio.\nRStudio only checks for package addins when R starts up,\nso the R session restart triggers RStudio to refresh the addin registry.\n\n### Inspiration\n\n<span class=\"pkg\">shrtcts</span> was inspired by <span class=\"pkg\">[rsam]</span>,\nthe _RStudio Addins Manager_ by [&commat;yonicd](https://github.com/yonicd).\nThere's a lot that <span class=\"pkg\">rsam</span> can do ---\nincluding helping you manage your keyboard shortcuts ---\nand <span class=\"pkg\">shrtcts</span> is essentially an extension of <span class=\"pkg\">rsam</span>'s\n[limited liability addins](https://github.com/yonicd/rsam#limited-liability-addins).\n<span class=\"pkg\">rsam</span> provides three slots for custom addins\nthat in turn look for specially-named functions defined in the global environment.\nIn the addins menu,\nthese three custom addins appear as\n**lla1**, **lla2**, and **lla3**.\nThe upside of <span class=\"pkg\">rsam</span>\nis that you don't have to write code in YAML (huge plus!),\nbut the downside is that the names of the addins are fixed.\n\n<span class=\"pkg\">shrtcts</span>,\non the other hand,\nrewrites its own addin registry so that you can have customized addin names and descriptions.\nIn both packages,\nthe number of custom addins is limited:\n<span class=\"pkg\">rsam</span> provides 3 slots,\nwhile <span class=\"pkg\">shrtcts</span> gives you 100.\n\n## Share Your Shortcuts\n\nBecause <span class=\"pkg\">shrtcts</span>\nstores your shortcuts in stand-alone(-ish) YAML files,\nyou can share your shortcuts file with others (or yourself)\nby posting it somewhere online,\nfor example as a [Github Gist](https://gist.github.com).\n\n[Here's a small collection of shortcuts](https://gist.github.com/gadenbuie/140204f122240f397e68e610643a4190)\nthat I use and that inspired me to create this package\nso that I didn't have to think of another package name.\n\nI hope <span class=\"pkg\">[shrtcts]</span> is helpful to you!\nFind me on [&commat;grrrck](https://twitter.com/grrrck)\nand let me know if it is.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}