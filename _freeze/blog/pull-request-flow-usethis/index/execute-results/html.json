{
  "hash": "4fc1379eef333d2271b8164a8d44425c",
  "result": {
    "markdown": "---\ntitle: Pull Request Flow with usethis\nauthor: Garrick Aden-Buie\ndate: '2021-10-07'\nslug: pull-request-flow-usethis\ncategories:\n  - R\n  - usethis\n  - Productivity\n  - Workflow\ndescription: Choose your own adventure and get in the 'usethis' pull request flow with this flow chart.\nimage: usethis-pr-flow-social.jpg\nsource_link: 'https://github.com/gadenbuie/garrickadenbuie-com/tree/main/content/blog/2021/pull-request-flow-usethis/index.Rmd'\nkeywords: rstats\ninclude-in-header:\n  text: |\n    <link href=\"usethis-adventure.css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/smoothscroll-polyfill@0.4.4/dist/smoothscroll.min.js\" integrity=\"sha384-EYn4rWu1DHvYD0sSSSbMEtXQmMl58CFJd897806+RT1jJVYbhuZlZMN6yG9nCyFa\" crossorigin=\"anonymous\"></script>\neditor_options:\n  chunk_output_type: console\nreferences: ~\ntoc: false\nresources:\n  - usethis-adventure.css\n  - usethis-adventure.js\n---\n\n\n[usethis]: https://usethis.r-lib.org\n[gert]: https://docs.ropensci.org/gert/\n[usethis-pr-docs]: https://usethis.r-lib.org/reference/pull-requests.html\n[usethis-pr-article]: https://usethis.r-lib.org/articles/articles/pr-functions.html\n\n\n\n\n![A flow chart for the pull request functions in the usethis R package.](usethis-pr-flow-medium.jpg){.lightbox description=\"A `usethis` pull request helper function flow diagram. [Download the image](#download) or read a [text version of the flow chart](flowchart/). ([CC BY](http://creativecommons.org/licenses/by/4.0/))\"}\n\n\n## Introduction\n\nThe <span class=\"pkg\">[usethis]</span> package is full of incredibly helpful functions\nthat make life as an R developer easier.\nA lot of the package's functions target R package maintainers,\nbut there's a small cluster of functions that are life changing\nfor anyone who uses `git` or collaborates with others via GitHub[^or-others].\n\n[^or-others]: I primarily use GitHub, but I think these functions will generally work for other code-hosting platforms as well, like GitLab or others.\n\nThese pull request helpers all start with the `pr_` prefix,\nbut I initially found them a little confusing to use\nsince they're each designed to be called in a specific context —\nfor example, when you have local work that isn't associated with a PR\nor when a PR exists but you don't have the work locally on your computer.\n\nOnce I wrapped my head around the functions, though,\nusing them has utterly transformed my day-to-day workflow.\nI can move in and out of collaborative work seamlessly.\nThe flow chart above is my personal mental model of this cluster of functions\nand I hope it helps you make sense of them, too.\n\nThere are other great resources available in the <span class=\"pkg\">usethis</span> documentation.\nBeyond the [function documentation][usethis-pr-docs],\nthere's also the great [_Pull request helpers_ article][usethis-pr-article].\nThat article walks through a pull request\nfrom the perspective of a contributor\nand a package maintainer.\n\nIn this blog post, however,\nyou get to play both roles and choose your own adventure!\n\n## Choose your own pull request adventure {#intro}\n\nWelcome to this choose-your-own-adventure blog post.\n<span id=\"instructions\">You don't need to read this one from top to bottom.\nInstead, jumping around is encouraged!</span>\n\nLook for the <i class=\"bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> icon.\nIt tells you that it's time for you make a choice.\nBut don't worry, there's no wrong choice:\nif you take a wrong turn\nyou can always use your browser's <i class=\"bi bi-arrow-left-circle-fill\" aria-hidden=\"true\" title=\"Back\"></i><span class=\"sr-only\">back</span> button\nto retrace your steps.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Ready to get started?\n\n<ul id=\"intro-options\">\n<li><p>Yes, [I'm ready to go](#get-started)!</p></li>\n</ul>\n:::\n\n## {#story-container}\n\n<div id=\"story\" aria-live=\"polite\" aria-relevant=\"additions\"></div>\n\n## Prep work {.step}\n\n### Let's get started {#get-started .step}\n\nYou open your project in RStudio (or the editor of your choice).\nYou make a note to yourself to come up with a better name for your package —\nfor now you're calling it <span class=\"pkg\">acme</span>\nbecause it's mostly a collection of random functions you've written.\n\nAnyway, you're thankful that you closed all of your open files the last time you were working,\nbut now the empty console beckons.\nYou're ready to do some work.\n\nWhere do you begin? With <span class=\"pkg\">[usethis]</span> of course.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(usethis)\n```\n:::\n\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> That was easy! [Lets do some work now.](#start)\n:::\n\n### What's next? {#start .step}\n\n::: {.decision}\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Now you face a tough decision: what do you actually do next?\n\n- [Start new work](#pr-init)\n\n- [Pick up something you were working on](#pr-resume)\n\n- [Review or collaborate with someone else's work](#pr-fetch-review)\n\n- [Clean up after a PR that's been merged](#pr-finish-start)\n:::\n\n### Start new work {#pr-init .step}\n\nTime to start something new.\nYou scan your project board, issues list, JIRA tickets, slack messages, emails, and post-it notes\nand finally settle on something to work on.\nYour task: add an example to the documentation for a function you've been working on.\n\nYou want to start your work in a new branch,\nso you call `pr_init()`,\ngiving it the name of your new branch.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_init(\"add-example\")\n```\n:::\n\n```\n✓ Setting active project to '/Users/garrick/work/acme'\nℹ Pulling changes from 'upstream/main'\n✓ Creating and switching to local branch 'add-example'\n● Use `pr_push()` to create PR.\n```\n\nThe console output reminds you that <span class=\"pkg\">usethis</span> updated your local repo\nand created and switched to a new branch for you.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> You're ready to [do some work](#do-work).\n:::\n\n### Pick up something you were working on {#pr-resume .step}\n\nYou're ready to get back to that thing you were working on.\nWhich was what again?\nYou should probably have another sip of your coffee.\nYou were doing some work in a branch in your local of the project...\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Do you remember the name of the branch?\n\n- [I don't remember, remind me](#pr-resume-no-branch)\n\n- [I remember, it's the `add-example` branch](#pr-resume-branch)\n:::\n\n### Get to a local branch {#pr-resume-local .step}\n\ngit branches, you've made a few.\nBut which one you do you want to work in?\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Do you remember the name of the branch?\n\n- [I don't remember, remind me](#pr-resume-no-branch)\n\n- [I remember, it's the `add-example` branch](#pr-resume-branch)\n:::\n\n### Choose a branch and resume working {#pr-resume-no-branch .step}\n\nDon't worry, <span class=\"pkg\">usethis</span> has your back.\nJust run `pr_resume()` without any arguments\nto get a list of local branches available to you.\n`pr_resume()` helpfully sorts the branches by recency of work\nand tells you if any of the branches are related to pull requests.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_resume()\n```\n:::\n\n```\nℹ No branch specified ... looking up local branches and associated PRs\nWhich branch do you want to checkout? (0 to exit)\n\n1:         add-example --> #11 ('@gadenbuie'): Add an example\n2: feature-exploration\n\nSelection: 1\n✓ Switching to branch 'add-example'\n✓ Pulling from 'origin/add-example'\n• Use `pr_push()` to create or update PR.\n```\n\nWe picked option `1` to keep working in our `add-example` branch.\nNotice that, since `add-example` is related to PR `#11`,\n`pr_resume()` also did you the extra favor of\nmaking sure that your local copy is up-to-date.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Rock and roll, you're ready to [get back to work](#do-work-yours).\n:::\n\n### Get back to the branch {#pr-resume-branch .step}\n\nLook at you, smarty pants.\nYou remember your git branch names!\nI'm proud of you.\n\nGood news,\n`pr_resume()` can switch to the `\"add-example\"` branch for you\nand it also makes sure that your local copy is up-to-date!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_resume(\"add-example\")\n```\n:::\n\n```\n✓ Switching to branch 'add-example'\n✓ Pulling from 'origin/add-example'\n• Use `pr_push()` to create or update PR.\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Sweat deal! Okay, you're ready to [keep on working](#do-work-yours).\n:::\n\n### Review or collaborate with someone else's work {#pr-fetch-review .step}\n\nVersion control software like git\nand collaborative coding platforms like GitHub\nare plenty of fun when you're working on your own.\nBut they really start to shine when you use them to collaborate with others.\n\nThe same is true for the <span class=\"pkg\">usethis</span> PR helper functions.\nSetting up your local repo to pull down the changes from a collaborator --\nchanges that probably live in a branch in _their copy_ of the repo --\ncan be a frustrating experience full of online searching\nto remember the specific incantations required\nto get your collaborators onto your computer and open in front of you.\n\nBut have no fear,\n`pr_fetch()` does all of this for you,\nin just one command in your R console.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Do you know the pull request number?\n\n- [I don't remember, remind me](#pr-fetch-no-branch)\n\n- [I remember, it's PR `#14`](#pr-fetch-branch)\n:::\n\n### Open a remote branch, locally {#pr-fetch .step}\n\nThe pull request is open on GitHub\nand you can see the changes there,\nbut you just can't interact with the code in the same way through the browser.\nYou have to bring that code into your local IDE\nwhere you can hold it in your hand\nand poke it with debuggers.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Do you know the pull request number?\n\n- [I don't remember, remind me.](#pr-fetch-no-branch)\n\n- [I remember, it's PR `#14`.](#pr-fetch-branch)\n:::\n\n### Choose a PR and bring the changes onto your computer {#pr-fetch-no-branch .step}\n\nYour friend,\nwho affectionately calls themselves `@wileycoyote` on GitHub,\nhelpfully contributed a new function\nto your bag of tricks package, <span class=\"pkg\">acme</span>.\nThey sent you a message on Slack letting you know they submitted a PR,\nbut they didn't mention the PR number.\n\nNo big deal —\nyou can call `pr_fetch()` from your local repository\nwithout any arguments\nand `pr_fetch()` will look up any open pull requests\nand give you the option to pick the one you want.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_fetch()\n```\n:::\n\n```\nℹ No PR specified ... looking up open PRs\nWhich PR are you interested in? (0 to exit)\n\n1: 'gadenbuie/acme/#11' (@gadenbuie): 'Add an example'\n2: 'gadenbuie/acme/#14' (@wileycoyote): 'Model tuning features'\n\nSelection: 2\n✓ Checking out PR 'gadenbuie/acme/#14' (@wileycoyote): 'Model tuning features'\n✓ Adding remote 'wileycoyote' as 'git@github.com:wileycoyote/acme.git'\n✓ Creating and switching to local branch 'wileycoyote-toone-model'\n✓ Setting 'wileycoyote/toone-model' as remote tracking branch\n```\n\nYou find your friend's PR in the list and choose selection `2`.\nNext time you can perform the same steps by providing the PR number —\n`pr_fetch(14)` —\nor you can use the menu again.\nWho has time or brain space to memorize pull request numbers?\n\nNow that you have the code from the PR available to you locally,\nyou're free to poke around to try out the code and review it.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Okay, you've had a chance to look at the code, what do you want to do next?\n\n- [I want to make some changes to add to the PR.](#do-work-theirs)\n\n- I reviewed the code and left comments for the PR author in the pull request.\n\n   - [I'm done with this branch](#pr-forget-theirs).\n\n   - [I'm done for now, but I'll probably come back to this branch later](#pr-pause).\n:::\n\n### Open a PR locally {#pr-fetch-branch .step}\n\nYou've been working with your friend,\n`@wileycoyote`,\non a new set of model tuning functions.\nThey've helpfully started working on a PR,\nbut since you've been reviewing the code carefully\nwith them over the past few days,\nyou actually remember the pull request number.\nLucky number **14**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_fetch(14)\n```\n:::\n\n```\n✓ Checking out PR 'gadenbuie/acme/#14' (@wileycoyote): 'Model tuning features'\n✓ Switching to branch 'wileycoyote-toone-model'\n```\n\nYou already have a copy of the PR branch in your local project,\nso `pr_fetch()` simply switched you into\nthe `wileycoyote-toone-model` branch\nthat it created when you first fetched the PR.\n\nBecause you might have been doing some work here before,\n`pr_fetch()` does not try to update your local branch.\nBut you haven't done any work yet other than looking at the code,\nso you follow up with `pr_pull()` to pull the latest changes into your project.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_pull()\n```\n:::\n\n```\n✓ Pulling from 'wileycoyote/toone-model'\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Now that you have the latest PR code, what do you want to do next?\n\n- [I want to make some changes to add to the PR.](#do-work-theirs)\n\n- I reviewed the code and left comments for the PR author in the pull request.\n\n   - [I'm done with this branch](#pr-forget-theirs).\n\n   - [I'm done for now, but I'll probably come back to this branch later](#pr-pause).\n:::\n\n### Open your PR on GitHub {#pr-view-yours .step}\n\nYou can jump straight to the GitHub pull request page\nfor the branch you're in with `pr_view()`!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_view()\n```\n:::\n\n```\nℹ Current branch ('add-example') is connected to PR #11\n✓ Opening URL 'https://github.com/gadenbuie/acme/pull/11'\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> When you're done with the PR on GitHub,\ncome back here to decide where you're headed next.\n\n- That's it for now, I'm [ready to start the next thing](#pr-pause).\n\n- Hang on, [I found something I need to fix](#fix-something).\n\n- Good news, the pull request was merged and [I'm done with this work](#pr-finish-yours).\n\n- Changes were made in the PR [and now I need to update my local copy](#pr-pull).\n\n- There were updates in the main branch [and now I want to bring them into my PR branch](#pr-merge-main-yours).\n\n- Actually, the pull request was closed and [I can forget about this work](#pr-forget-yours).\n:::\n\n### Open their PR on GitHub {#pr-view-theirs .step}\n\nYou can jump straight to the GitHub pull request page\nfor the branch you're in with `pr_view()`!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_view()\n```\n:::\n\n```\nℹ Current branch ('wileycoyote-toone-models') is connected to PR #14\n✓ Opening URL 'https://github.com/gadenbuie/acme/pull/14'\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Welcome back to your project,\nI hope everything went well over on GitHub.\nWhere to next?\n\n- I'm done here for now, let's [start the next thing](#pr-pause).\n\n- Shoot, [I saw something I need to fix](#fix-something-theirs).\n\n- Nothing more with this branch, I can [forget all about this PR](#pr-forget-theirs).\n\n- Changes were made in the PR [and now I need to update my local copy](#pr-pull-theirs).\n\n- There were updates in the main branch [and now I want to bring them into my PR branch](#pr-merge-main-theirs).\n\n- The PR was merged so [I'm all done with this work](#pr-finish-theirs).\n:::\n\n## Update your local copy {#do-update .step}\n\n### Update your local copy with a reviewer's changes {#pr-pull .step}\n\nMaybe a reviewer [suggested changes](https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/incorporating-feedback-in-your-pull-request#applying-a-suggested-change)\nand you merged them from the PR page on GitHub.\nMaybe a GitHub actions workflow\n[automatically re-styled your code](https://github.com/r-lib/actions/blob/master/examples/pr-commands.yaml#L45-L75).\nOr maybe you did a little side-project updating on your work computer.\n\nHowever the changes happened,\nthe code in the PR branch has changed,\nand now you want to `pr_pull()` those changes into your local copy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_pull()\n```\n:::\n\n```\n✓ Pulling from 'origin/add-example'\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> That was easy! What's next?\n\n- I'm going to [write some code in this branch](#do-work-yours).\n\n- I'm going to put this down and [work on something else](#pr-pause).\n\n- I just merged this pull request and [I'm all done with this work](#pr-finish-yours).\n:::\n\n### Update your local copy with someone else's changes {#pr-pull-theirs .step}\n\nChanges were made and hopefully the code has been improved,\nbut you'd like to run through the changes yourself\nto make sure it works as expected.\n\nUse `pr_pull()` to get the latest changes from the PR branch into your local copy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_pull()\n```\n:::\n\n```\n✓ Pulling from 'wileycoyote/toone-model'\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> That was easy! What's next?\n\n- I'm going to [write some code in this branch](#do-work-theirs).\n\n- I'm going to put this down and [work on something else](#pr-pause).\n\n- That's all I wanted to do, I can [forget about this PR now](#pr-forget-theirs).\n\n- I just merged this pull request and [I'm all done with this work](#pr-finish-theirs).\n:::\n\n### Bring your work up to date with the main branch {#pr-merge-main-yours .step}\n\nWhile you were working on adding a new example to the documentation,\nyour friend `@wileycoyote` went and submitted a PR that changes\nthe function you're working on.\n\nYou found out when you looked at your pull request on GitHub\nand it said\n\n> <i class=\"fa fa-exclamation-triangle\"><span class=\"sr-only\">Caution:</span></i> This branch has conflicts that must be resolved.\n\nUsually two people can work in the same project on two different areas\nwithout running into each other,\nbut when both you and someone else want to change the same lines of code,\nyou run into this issue.\n\nHelpfully,\n`pr_merge_main()` can get the latest changes from the main branch of your project\ninto your current pull request!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_merge_main()\n```\n:::\n\n```\n✓ Pulling changes from 'origin/main' (default branch of source repo)\nThere are 1 conflicted files:\n* R/atom_arranger.R\n\nAre you ready to sort this out?\nIf so, we will open the conflicted files for you to edit.\n\n1: Yes, I'm ready to resolve the merge conflicts.\n2: No, I want to abort this merge.\n\nSelection: 1\nPlease fix each conflict, save, stage, and commit.\nTo back out of this merge, run `gert::git_merge_abort()` (in R) or `git merge --abort` (in the shell).\n```\n\nIf you need to fix any merge conflicts,\n`pr_merge_main()` will alert you\nthat there are conflicts that need to be addressed.\nIt also opens the files for you if you want it to,\nor you can choose to abort the merge\nand find another way to resolve the conflicts.\n\nYou want to resolve the conflicts,\nso you picked selection `1` to open the conflicted file\nwhere you start looking for blocks in the source code that look like this:\n\n```\n<<<<<<< add-example\nCode in the first section appears in\nour *current* version in the `add-example` branch\n=======\nCode in the second section appears in\nthe *incoming* version, i.e. the `main` branch\n>>>>>>> main\n```\n\nTo resolve the conflict, you\n\n1. Edit from `<<<<<<<` to `>>>>>>>`\n   choosing one or the other or a blend of the two versions\n\n1. Save the file and stage it with `gert::git_add()`\n\n1. Repeat for other files with merge conflicts\n\n1. Commit the updated files with `gert::git_commit()`\n   or `git commit` in the command line\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Great, your branch is up to date with the main branch!\n\n- I'm going to [write some code in this branch](#do-work-yours).\n\n- I want to [update the pull request on GitHub with these changes](#pr-push-yours).\n:::\n\n\n### Bring their work up to date with the main branch {#pr-merge-main-theirs .step}\n\nWhile you and `@wileycoyote` have been working together on this new feature,\nyou've been doing some work in other areas of the package.\nSince that other work has been added to the `main` branch,\nyou might want to make sure that everything is up to date\nin `@wileycoyote`'s `toone-model` branch.\n\nTo do this, run `pr_merge_main()`.\nIt makes sure your default branch is up to date\nand then merges any changes into the current branch.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_merge_main()\n```\n:::\n\n```\n✓ Pulling changes from 'origin/main' (default branch of source repo)\nMerged origin/main into wileycoyote-toone-model\n```\n\nIf there aren't any merge conflicts,\nyou'll get a nice, quick confirmation that the merge went well.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Great, `@wileycote`'s branch is up to date with the main branch!\n\n- I'm going to [write some code in this branch](#do-work-theirs).\n\n- I want to [update the pull request on GitHub with these changes](#pr-push-theirs).\n:::\n\n### Get to the right place {#do-choose-branch .step}\n\nLet's make sure we're in the right branch in your local project.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span>\nWhich branch do you want to work with right now?\n\n- The one I'm in right now, so\n  [I'm ready to get to work](#do-work)!\n\n- [A local branch, but not the one I'm in now](#pr-resume-local)\n\n- [A pull request branch I was looking at on GitHub](#pr-fetch)\n:::\n\n## Work {.step}\n\n### Do some work {#do-work .step}\n\nYou take a sip of your coffee (or the beverage of your choice),\nturn up your favorite\n[music to write code to](https://open.spotify.com/playlist/1fk6kpO8nb1KAUc1XAkAJ6)\nplaylist on Spotify,\nand line up 25 minutes in your [Pomodoro app](https://pomofocus.io/).\n\nYou're ready to get something done!\nGo write some code.\n&#x23F2;&#xFE0F;\n&#x1F9D1;&#x200D;&#x1F4BB;\n&#x1F3A7;\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span>\nSweet!\nNow that you feel good about your work,\nyou're ready to [take a snapshot of your updates](#git-commit).\n:::\n\n### Keep doing some work {#do-work-yours .step}\n\n> Taking breaks and resting is important!\n>\n> Last night I got caught up in a nested\n> [#RStats](https://twitter.com/hashtag/rstats)\n> list problem and couldn't solve it.\n>\n> Wrote the code this morning first shot.\n>\n> Take breaks! You need them!\n>\n> --- Nicholas Tierney (&commat;nj_tierney) [April 16,2019](https://twitter.com/nj_tierney/status/1117964839127674881)\n\nSometimes the best thing you can do to solve a problem is give it some time.\nGo for a walk, read something engaging, talk to a friend, take a shower.\n\nAnd now you're back with fresh eyes, more energy, and a full cup of coffee.\nThis time, things go better!\nYou fall easily into a flow and start writing some code.\nAs you go,\nyou periodically pause to stage files with `gert::git_add()`\nor to commit batches of changes with `gert::git_commit()`.\n\nAfter a bit you surprise yourself when you realize\nthat the thing you couldn't figure out when you were tired yesterday\nyou've knocked out in an hour.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span>\nHappy with your progress, you're ready [update the PR with your latest changes](#pr-push-yours).\n:::\n\n\n### Collaborate with someone else {#do-work-theirs .step}\n\nThis is exciting!\nYour friend —\nwhich feels like a totally natural way to describe `@wileycoyote`,\na person you know primarily from Twitter —\nhad a pretty cool idea\nand you're feeling the buzz of inspiration.\nEven though they started the pull request,\nyou're about to riff on the ideas they started laying down.\n\nYou pick out your [favorite RStudio theme](https://www.garrickadenbuie.com/project/rsthemes/)\nand turn up your favorite dance-slash-coding-slash-singing-out-loud music.\n\nAs you work,\nyou pause occasionally to stage files with `gert::git_add()`\nand to commit them with `gert::git_commit()`.\nSince you're working with someone else,\nyou remember to\n[write good commit messages](https://xkcd.com/1296/),\nbut since you're having fun you also use\n[gitmoji to give each commit a good emoji.](https://gitmoji.dev/)\n\nIt's a lot later than you expect when you start wrapping up.\nThat's okay, `@wileycoyote` is going to be stoked to see what you've been working on!\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span>\nGo head and [update the PR with your latest changes](#pr-push-theirs).\n:::\n\n### Take a snapshot of your work {#git-commit .step}\n\n_If you like it then you shoulda made a `git commit`._\n\nThere are two parts to taking a snapshot of your code.\nAnd really,\nit's less like taking a picture and more like sending yourself an email\nwith a copy of your files.\n\nFirst, you'll pick the files that you want to add to the snapshot (or commit).\nYou can do this in the R console using `git_add()` from the <span class=\"pkg\">[gert]</span> package.\nGive the function a vector with the paths to the files you changed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngert::git_add(c(\"R/atom_arranger.R\", \"man/atom_arranger.Rd\"))\n```\n:::\n\n\nIn git-speak,\n`git_add()` adds the changes in the listed files to a staging area.\nRunning this command is like dragging a file into the email you're writing.\nWe haven't officially sent that email yet,\nbut we have a copy ready to go.\nBy the way,\nyou can still make more changes to the file\nknowing that there's a temporary copy in that email draft\nin case anything goes wrong.\n\nThen, once all the files you want to commit have been added,\nyou _commit_ the changes.\nIn our email metaphor,\ncommitting is a lot like pressing send on the email.\n\nAnd just like an email,\nthe commit includes a message\nwhere you can describe the updates you made to the files in the email (commit).\n\nFor this step you can use\n`git_commit()`\n(also from the <span class=\"pkg\">[gert]</span> package)\nwhich takes the commit message as a parameter.\nThink of this message like the subject of an email to your future self.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngert::git_commit(\"Add an example to ?atom_arranger()\")\n```\n:::\n\n\n_P.S. You can do this adding-and-committing dance in the [Git pane in RStudio](https://happygitwithr.com/rstudio-git-github.html), too._\n\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Are you ready to share your work?\n\n- Yes! I'm ready to [push my changes out into the world](#pr-push-new).\n\n- Not yet, I want to [keep on working on this](#do-work).\n\n- Actually, I don't think I'm on the right track here.\n  I'd [rather back out of this branch and forget all about it](#pr-forget-yours).\n:::\n\n### Fix something {#fix-something .step}\n\nOh no, you need to fix something!\nI hope it's just a typo and not a big scary error!\nBut first...\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span>\nThis thing that needs to be fixed —\n[what branch is it in](#do-choose-branch)?\n:::\n\n### Fix something {#fix-something-theirs .step}\n\nOh no, you need to fix something!\nI hope it's just a typo and not a big scary error!\nBut first...\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span>\nThis thing that needs to be fixed — what branch is it in?\n\n- The one I'm in right now, so\n  [I'm ready to get to work](#do-work-theirs)!\n\n- [A local branch, but not the one I'm in now.](#pr-resume-local)\n\n- [A pull request branch I was looking at on GitHub.](#pr-fetch)\n:::\n\n### Fix something {#fix-something-yours .step}\n\nOh no, you need to fix something!\nI hope it's just a typo and not a big scary error!\nBut first...\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span>\nThis thing that needs to be fixed — what branch is it in?\n\n- The one I'm in right now, so\n  [I'm ready to get to work](#do-work-yours)!\n\n- [A local branch, but not the one I'm in now](#pr-resume-local)\n\n- [A pull request branch I was looking at on GitHub](#pr-fetch)\n:::\n\n## Share your work {#share-your-work .step}\n\nFantastic!\nYour work is awesome and everyone is going to be happy to try it out.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Let's get your work off of your computer and out into the world.\n\n- This [new work you're sharing for the first time](#pr-push-new).\n\n- I'm [updating a pull request that I created](#pr-push-yours).\n\n- I'm [updating a pull request from someone else](#pr-push-theirs).\n:::\n\n### Create a new pull request {#pr-push-new .step}\n\nFantastic!\nYour work is awesome and everyone is going to be happy to try it out.\n\nLet's get your work off of your computer and out into the world.\nTo create a new pull request, you call `pr_push()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_push()\n```\n:::\n\n```\n✔ Pushing local 'add-example' branch to 'origin:add-example'\n✔ Setting upstream tracking branch for 'add-example' to 'origin/add-example'\n✔ Create PR at link given below\n✔ Opening URL 'https://github.com/gadenbuie/acme/compare/add-example'\n```\n\n`pr_push()` sends the local changes in your new branch to GitHub,\nand opens a browser window where you can review your changes once more.\nIf everything looks good,\ngo ahead click the _Create Pull Request_ button.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Good job! How are you feeling now?\n\n- I'm on a roll, let's [start the next thing](#pr-pause).\n\n- I'd want to [open the PR on GitHub again](#pr-view-yours).\n\n- Oh shoot, [I saw something I need to fix](#fix-something).\n\n- Great, that pull request was just merged and [I'm done with this work](#pr-finish-yours).\n\n- Changes were made in the PR [and now I need to update my local copy](#pr-pull).\n\n- There were updates in the main branch [and now I want to bring them into my PR branch](#pr-merge-main-yours).\n\n- Actually, the pull request was closed and [I can forget about this work](#pr-forget-yours).\n:::\n\n### Update your existing pull request {#pr-push-yours .step}\n\nYou just made [and committed](#git-commit)\nsome changes to an existing PR you created,\nand now you'd like to update that PR on GitHub.\n`pr_push()` also does this for you!\nHelpfully, before it pushes it checks to make sure your local branch is up-to-date.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_push()\n```\n:::\n\n```\n✔ Checking that local branch 'add-example' has the changes in 'origin/add-example'\n✔ Pushing local 'add-example' branch to 'origin:add-example'\n✔ View PR at 'https://github.com/gadenbuie/acme/pull/10' or call `pr_view()`\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Phenomenal! What do you want to do next?\n\n- I want to [take a look at the PR on GitHub](#pr-view-yours).\n\n- Rock on! I'm moving on to [start the next thing](#pr-pause).\n\n- Wait a second, [I saw something I need to fix](#fix-something-yours).\n\n- Changes were made in the PR [and now I need to update my local copy](#pr-pull).\n\n- There were updates in the main branch [and now I want to bring them into my PR branch](#pr-merge-main-yours).\n\n- The PR has been merged and [I'm all done with this work](#pr-finish-yours).\n\n- Never mind, my [PR was closed and I'd like to forget about this work](#pr-forget-yours).\n:::\n\n### Update someone else's pull request {#pr-push-theirs .step}\n\nAt this point,\nyou have changes in your local copy of your PR branch\nthat you need to push out to the source branch for the PR,\nwhich happens to be in `@wileycoyote`'s fork of your repo.\n\n`pr_push()` is very smart and knows how to send the changes to the correct repository,\npushing to the `toone-model` in the `wileycoyote/acme`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_push()\n```\n:::\n\n```\n✔ Checking that local branch 'wileycoyote-toone-model' has the changes in 'wileycoyote/toone-model'\n✔ Pushing local 'wileycoyote-toone-model' branch to 'wilecoyote:toone-model'\n✔ View PR at 'https://github.com/gadenbuie/acme/pull/14' or call `pr_view()`\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Phenomenal! What do you want to do next?\n\n- I want to [take a look at the PR on GitHub](#pr-view-theirs).\n\n- Beep, beep! I'm moving on to [start the next thing](#pr-pause).\n\n- Hang on, [I saw something I need to fix](#fix-something-theirs).\n\n- That's all I wanted to do, I can [forget about this PR now](#pr-forget-theirs).\n\n- Changes were made in the PR [and now I need to update my local copy](#pr-pull-theirs).\n\n- There were updates in the main branch [and now I want to bring them into my PR branch](#pr-merge-main-theirs).\n\n- I just merged this pull request and [I'm all done with this work](#pr-finish-theirs).\n:::\n\n\n\n## Wrap Up {.step}\n\n### Pause your work {#pr-pause .step}\n\nYou're done but you have a feeling you'll be back here again soon.\nWhat you need is a little _pause_.\n\nCall `pr_pause()` to switch from the current branch back to the default branch,\nand to make sure you've got the latest changes in the default branch.\nDon't worry,\nthe work will be waiting patiently for you in a local branch\nwhen you're ready to come back to it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_pause()\n```\n:::\n\n```\n✓ Switching back to default branch ('main')\n✓ Pulling changes from 'origin/main'\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> [Go back to Start](#start) to decide to decide what's next in your adventure.\n:::\n\n### Finish up your work {#pr-finish-start .step}\n\nHooray!\nA PR was merged and the new code is now in the default branch.\nThat's one less branch you need to keep around on your computer.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Was this PR yours?\n\n- **Yes**, and...\n\n   - [I'm still in the PR branch in my local project](#pr-finish-yours)\n\n   - [I'm in the main branch now, but I have the PR branch here somewhere](#pr-finish-number)\n\n- **No**, and...\n\n   - [I'm still in the PR branch in my local project](#pr-finish-theirs)\n\n   - [I'm in the main branch now, but I have the PR branch here somewhere](#pr-finish-number)\n:::\n\n### Finish your work {#pr-finish-yours .step}\n\nCongrats! Your pull request was merged!\nThat's awesome.\nNow it's time to wrap things up by calling `pr_finish()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_finish()\n```\n:::\n\n```\n✓ Checking that remote branch 'origin/add-example' has the changes in 'add-example'\n✓ Switching back to default branch ('main')\nℹ Pulling changes from 'origin/main'\n✓ Deleting local 'add-example' branch\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> [Go back to Start](#start) to decide what's next in your adventure.\n:::\n\n### Finish your work {#pr-finish-theirs .step}\n\nWell done,\nyour collaboration with `@wileycoyote` is complete and their PR is merged!\nThat's awesome.\nNow it's time to wrap things up by calling `pr_finish()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_finish()\n```\n:::\n\n```\n✔ Checking that remote branch 'wileycoyote/toone-model' has the changes in 'local/wileycoyote-toone-model'\n✔ Switching back to 'main' branch\n✔ Pulling changes from GitHub source repo 'origin/main'\n✔ Deleting local 'wileycoyote-toone-model' branch\n✔ Removing remote 'wileycoyote'\n```\n\nNotice that `pr_finish()` does quite a lot!\nIt makes sure that you don't accidentally leave behind\nsome changes in your local branch that might have forgotten to push.\nThen it switches back to `main` and makes sure that's up to date, too.\nFinally we forget all about `@wileycote`'s branch and forked repo.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span>\nThat's all folks!\n[Head back to the beginning](#start) to choose your next adventure.\n:::\n\n### Clean up now that the PR has been merged {#pr-finish-number .step}\n\nYou don't have to be in your local copy of the PR branch\nif you know the PR number.\nGive the number to `pr_finish()`\nand it will do the rest for you:\nit moves back to the default branch,\nupdates your local copy,\nand deletes the old PR branch.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_finish(11)\n```\n:::\n\n```\n✓ Checking that remote branch 'origin/add-example' has the changes in 'add-example'\n✓ Switching back to default branch ('main')\nℹ Pulling changes from 'origin/main'\n✓ Deleting local 'add-example' branch\n```\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> [Go back to Start](#start) to decide what's next in your adventure.\n:::\n\n### Forget about your work {#pr-forget-yours .step}\n\nWell that was fun.\nBut now you're done with this branch\nand you call `pr_forget()` to delete it from your local copy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_forget()\n```\n:::\n\n```\nLocal branch 'add-example' has no associated remote branch.\nIf we delete 'add-example', any work that exists only on this branch work may be hard for you to recover.\nProceed anyway?\n\n1: No way\n2: Not now\n3: Yes\n\nSelection: 3\n✓ Switching back to default branch ('main')\n✓ Pulling changes from 'origin/main'\n✓ Deleting local 'add-example' branch\n```\n\nNotice that `pr_forget()` warns you about any work you might lose\nand gives you a chance to rethink it.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> [Go back to Start](#start) to decide what's next in your adventure.\n:::\n\n### Forget about their work {#pr-forget-theirs .step}\n\nYour work here is done and you'd like to move on with your life.\n`pr_forget()` lets you put this branch behind you.\nAnd while it's in there,\nit also cleans up your repo,\ndeleting the local copy of the PR branch\nand removing the PR author's repo fork\nfrom the list of remote repositories your git project could sync with.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_forget()\n```\n:::\n\n```\n✓ Switching back to default branch ('main')\n✓ Pulling changes from 'origin/main'\n✓ Deleting local 'wileycoyote-toone-models' branch\n✓ Removing remote 'wileycoyote'\n```\n\nThat was smooth!\nNotice that `pr_forget()` moved you into the default branch of your repo,\n`main`,\nand it even made sure that branch is up to date.\n\n`pr_forget()` is safe and cautious.\nIf your local `wileycoyote-toone-models` branch\nhad had any changes in it that you might have lost,\n`pr_forget()` would have warned you.\nYou also know that you can get back to the PR branch any time\nusing `pr_fetch()`.\n\n::: decision\n<i class=\"way-point bi bi-signpost-fill\" aria-hidden=\"true\" title=\"Decision Time\"></i><span class=\"sr-only\">Decision time:</span> Worry and care-free, you [head back to the beginning](#start) to decide what's next in your adventure.\n:::\n\n##\n\n<div id=\"step-list\" style=\"display:none\"></div>\n\n<div id=\"story-reset\"><a href=\"#start\"><i aria-hidden=\"true\" class=\"fas fa-undo-alt\"></i> Start over</a></div>\n\n## Download the usethis `pr_*()` flow chart {#download}\n\n- [Small JPG Image (190 KB)](usethis-pr-flow.jpg)\n- [Medium JPG Image (511 KB)](usethis-pr-flow-medium.jpg)\n- [Large JPG Image (1.36 MB)](usethis-pr-flow-large.jpg)\n- [SVG (40 KB)](usethis-pr-flow.svg)\n- [SVG, Editable (40 KB)](usethis-pr-flow-editable.svg)\n- [Source File `.drawio` (4 KB)](usethis-pr-flow.drawio)\n\n::: cc-box\n\n\n```{=html}\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">\n  <img alt=\"Creative Commons License\" style=\"border-width:0;margin-right:1em;\" src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\" align=\"left\" />\n</a>\n<em xmlns:dct=\"http://purl.org/dc/terms/\" href=\"http://purl.org/dc/dcmitype/StillImage\" property=\"dct:title\" rel=\"dct:type\">\n  Pull Request Flow with usethis\n</em>\nby\n<a xmlns:cc=\"http://creativecommons.org/ns#\" href=\"https://www.garrickadenbuie.com/blog/pull-request-flow-usethis\" property=\"cc:attributionName\" rel=\"cc:attributionURL\">\nGarrick Aden-Buie\n</a> is licensed under a\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">Creative Commons Attribution 4.0 International License</a>.\n```\n\n\n:::\n\n<script src=\"usethis-adventure.js\"></script>\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}