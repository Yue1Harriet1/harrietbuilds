{
  "hash": "90b7d56b529b11169432253ccaba74c1",
  "result": {
    "markdown": "---\ntitle: \"üêøÔ∏è Sqrrl\"\nslug: \"sqrrl\"\ndescription: \"Easily build bespoke SQL queries programmatically in R\"\ndate: 2017-07-01T00:00:00+00:00\nimage: feature.png\ncategories:\n  - Project\ntags: [\"R\", \"R Package\", \"SQL\", \"MySQL\", \"Shiny\"]\npage: project\nshow_post_thumbnail: true\n---\n\n\n\n\n**UPDATE 10/17/2017**: **Don't use this!** I made it for myself so it works for what I needed it for.\nBut you probably shouldn't use this package.\nThere are better ways of building SQL queries that are safer and better (and probably even easier).\nFor now, let me just point you in the direction of [db.rstudio.com](http://db.rstudio.com/), [dplyr/dbplyr](http://db.rstudio.com/dplyr#generating-queries), and the recently added [`glue_sql()` function](http://glue.tidyverse.org/reference/glue_sql.html) in the [glue package](http://glue.tidyverse.org).\n\n**Project Links:** [source][sqrrl-src], [documentation][sqrrl-docs]\n\n`sqrrl` is a small collection of utility functions that help build text-based SQL queries in an R-style native-feeling and functional manner.\n\nUnlike other packages that build SQL queries using an object-oriented style, `sqrrl` provides small functions that produce SQL snippets and can be linked together to compose SQL queries.\nThe result is that the code to produce the SQL statement reads much like the SQL statement iteself.\nOn the other hand, `sqrrl` doesn't know anything about your database and can't help you out with completions, etc.\n\nWhere this package is most useful is with [Shiny web apps][shiny] that interact with a MySQL backend.\nThe utilities are all built so that queries can be built using column names and values stored inside ordinary R data structures.\n\nThe following is a quick demonstration of how the package works using the `nyclights13` dataset.\nFor more information on `sqrrl`, check out the [package documentation][sqrrl-docs].\n\n## Setup `flights` database\n\nTo demonstrate the features in `sqrrl`, let's set up an in-memory SQLite database using the `nycflights13` dataset featured in `dplyr` and `dbplyr`.\n\nFirst, load (or install) the pacakges and functions that we need.\n\n\n::: {.cell hash='index_cache/html/setup-flights_d1219bc444946811262410a7d1ace30b'}\n\n```{.r .cell-code}\n# ---- Workspace Setup ----\nlibrary('nycflights13') # install.packages('nycflights13')\nlibrary('DBI')          # install.packages('DBI')\nlibrary('dplyr')        # install.packages('dplyr')\nlibrary('dbplyr')       # install.packages('dbplyr')\n\n# Load the sqrrl package\n# devtools::isntall_github('gadenbuie/sqrrl')\nlibrary('sqrrl')\n\n# Alias to create nice tables\nas_table <- function(...) knitr::kable(..., format = 'html')\n```\n:::\n\n\nThen load the `flights` data frame from  `nycflights13` into the in-memory SQLite database (this code comes direclty from the [dbplyr documentation](http://dbplyr.tidyverse.org/articles/dbplyr.html#connecting-to-the-database)).\n\n\n::: {.cell hash='index_cache/html/load-flights_9ecb0fe2882d8b4f7718bd75faa2ca46'}\n\n```{.r .cell-code}\n# ---- Example Setup ----\n# Create an in-memory SQLite database\ncon <- dbConnect(RSQLite::SQLite(), path = \":memory:\")\n\n# Use dplyr/dbplyr to copy flights table to the temp db\ncopy_to(con, nycflights13::flights, \"flights\",\n  temporary = FALSE,\n  indexes = list(\n    c(\"year\", \"month\", \"day\"),\n    \"carrier\",\n    \"tailnum\",\n    \"dest\"\n  )\n)\n\n# Show first 5 rows\ndbGetQuery(con, 'SELECT * FROM flights LIMIT 5') %>%\n  as_table\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> year </th>\n   <th style=\"text-align:right;\"> month </th>\n   <th style=\"text-align:right;\"> day </th>\n   <th style=\"text-align:right;\"> dep_time </th>\n   <th style=\"text-align:right;\"> sched_dep_time </th>\n   <th style=\"text-align:right;\"> dep_delay </th>\n   <th style=\"text-align:right;\"> arr_time </th>\n   <th style=\"text-align:right;\"> sched_arr_time </th>\n   <th style=\"text-align:right;\"> arr_delay </th>\n   <th style=\"text-align:left;\"> carrier </th>\n   <th style=\"text-align:right;\"> flight </th>\n   <th style=\"text-align:left;\"> tailnum </th>\n   <th style=\"text-align:left;\"> origin </th>\n   <th style=\"text-align:left;\"> dest </th>\n   <th style=\"text-align:right;\"> air_time </th>\n   <th style=\"text-align:right;\"> distance </th>\n   <th style=\"text-align:right;\"> hour </th>\n   <th style=\"text-align:right;\"> minute </th>\n   <th style=\"text-align:right;\"> time_hour </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 517 </td>\n   <td style=\"text-align:right;\"> 515 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 830 </td>\n   <td style=\"text-align:right;\"> 819 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\"> UA </td>\n   <td style=\"text-align:right;\"> 1545 </td>\n   <td style=\"text-align:left;\"> N14228 </td>\n   <td style=\"text-align:left;\"> EWR </td>\n   <td style=\"text-align:left;\"> IAH </td>\n   <td style=\"text-align:right;\"> 227 </td>\n   <td style=\"text-align:right;\"> 1400 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 15 </td>\n   <td style=\"text-align:right;\"> 1357034400 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 533 </td>\n   <td style=\"text-align:right;\"> 529 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 850 </td>\n   <td style=\"text-align:right;\"> 830 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:left;\"> UA </td>\n   <td style=\"text-align:right;\"> 1714 </td>\n   <td style=\"text-align:left;\"> N24211 </td>\n   <td style=\"text-align:left;\"> LGA </td>\n   <td style=\"text-align:left;\"> IAH </td>\n   <td style=\"text-align:right;\"> 227 </td>\n   <td style=\"text-align:right;\"> 1416 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 29 </td>\n   <td style=\"text-align:right;\"> 1357034400 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 542 </td>\n   <td style=\"text-align:right;\"> 540 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 923 </td>\n   <td style=\"text-align:right;\"> 850 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n   <td style=\"text-align:left;\"> AA </td>\n   <td style=\"text-align:right;\"> 1141 </td>\n   <td style=\"text-align:left;\"> N619AA </td>\n   <td style=\"text-align:left;\"> JFK </td>\n   <td style=\"text-align:left;\"> MIA </td>\n   <td style=\"text-align:right;\"> 160 </td>\n   <td style=\"text-align:right;\"> 1089 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 40 </td>\n   <td style=\"text-align:right;\"> 1357034400 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 544 </td>\n   <td style=\"text-align:right;\"> 545 </td>\n   <td style=\"text-align:right;\"> -1 </td>\n   <td style=\"text-align:right;\"> 1004 </td>\n   <td style=\"text-align:right;\"> 1022 </td>\n   <td style=\"text-align:right;\"> -18 </td>\n   <td style=\"text-align:left;\"> B6 </td>\n   <td style=\"text-align:right;\"> 725 </td>\n   <td style=\"text-align:left;\"> N804JB </td>\n   <td style=\"text-align:left;\"> JFK </td>\n   <td style=\"text-align:left;\"> BQN </td>\n   <td style=\"text-align:right;\"> 183 </td>\n   <td style=\"text-align:right;\"> 1576 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 45 </td>\n   <td style=\"text-align:right;\"> 1357034400 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 554 </td>\n   <td style=\"text-align:right;\"> 600 </td>\n   <td style=\"text-align:right;\"> -6 </td>\n   <td style=\"text-align:right;\"> 812 </td>\n   <td style=\"text-align:right;\"> 837 </td>\n   <td style=\"text-align:right;\"> -25 </td>\n   <td style=\"text-align:left;\"> DL </td>\n   <td style=\"text-align:right;\"> 461 </td>\n   <td style=\"text-align:left;\"> N668DN </td>\n   <td style=\"text-align:left;\"> LGA </td>\n   <td style=\"text-align:left;\"> ATL </td>\n   <td style=\"text-align:right;\"> 116 </td>\n   <td style=\"text-align:right;\"> 762 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 1357038000 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Querying `flights`\n\nOften, when I'm working with a database, I'll create an alias for `dbGetQuery` with the database or table name.\nInside the alias function I usually add any data type modifications that might need to be applied, and I suppress the warning messages that `DBI` outputs about data type conversions.\n\n\n::: {.cell hash='index_cache/html/flights-alias_645aeb067fefb06fdeb2f5eb99cb1179'}\n\n```{.r .cell-code}\nflights <- function(query, ...) {\n  suppressWarnings(dbGetQuery(con, query, ...))\n}\n```\n:::\n\n\nNow we can repeat the above `SELECT` statement using `sqrrl`, this time limiting the columns selected.\n\n\n::: {.cell hash='index_cache/html/flights-select_2318ac17d62dab8aae469b9cd7aae9ad'}\n\n```{.r .cell-code}\nflight_cols <- c('year', 'month', 'day',\n                 'carrier', 'flight', 'tailnum')\nSELECT(flight_cols) %+%\n  FROM('flights') %+%\n  LIMIT(5) %>%\n  flights %>%\n  as_table\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> year </th>\n   <th style=\"text-align:right;\"> month </th>\n   <th style=\"text-align:right;\"> day </th>\n   <th style=\"text-align:left;\"> carrier </th>\n   <th style=\"text-align:right;\"> flight </th>\n   <th style=\"text-align:left;\"> tailnum </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> UA </td>\n   <td style=\"text-align:right;\"> 1545 </td>\n   <td style=\"text-align:left;\"> N14228 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> UA </td>\n   <td style=\"text-align:right;\"> 1714 </td>\n   <td style=\"text-align:left;\"> N24211 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> AA </td>\n   <td style=\"text-align:right;\"> 1141 </td>\n   <td style=\"text-align:left;\"> N619AA </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> B6 </td>\n   <td style=\"text-align:right;\"> 725 </td>\n   <td style=\"text-align:left;\"> N804JB </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> DL </td>\n   <td style=\"text-align:right;\"> 461 </td>\n   <td style=\"text-align:left;\"> N668DN </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nNote that `sqrrl` provides the `%+%` infix operator, which is essentially just an alias for `paste(x, y)`.\n\n\n::: {.cell hash='index_cache/html/plus-infix_6ab3b4af7e50c1c678d0843af6d8e0a1'}\n\n```{.r .cell-code}\n'a' %+% 'b'\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"a b\"\n```\n:::\n\n```{.r .cell-code}\n# or PHP style without a padded space: paste0\n'a' %.% 'b'\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"ab\"\n```\n:::\n:::\n\n\nWe can also do more complicated queries, like finding the average arrival delay, grouped by tail number:\n\n\n::: {.cell hash='index_cache/html/flights-avg-arr-delay_5f7231c6f6f4a5a46a9c1cfa07c38500'}\n\n```{.r .cell-code}\nSELECT('tailnum', delay = 'avg(arr_delay)', n = 'count(*)') %+%\n  FROM('flights') %+%\n  GROUP_BY('tailnum') %+%\n  ORDER_BY(DESC('delay')) %+%\n  LIMIT(10) %>%\n  flights %>%\n  as_table\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> tailnum </th>\n   <th style=\"text-align:right;\"> delay </th>\n   <th style=\"text-align:right;\"> n </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> N844MH </td>\n   <td style=\"text-align:right;\"> 320.0000 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N911DA </td>\n   <td style=\"text-align:right;\"> 294.0000 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N922EV </td>\n   <td style=\"text-align:right;\"> 276.0000 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N587NW </td>\n   <td style=\"text-align:right;\"> 264.0000 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N851NW </td>\n   <td style=\"text-align:right;\"> 219.0000 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N928DN </td>\n   <td style=\"text-align:right;\"> 201.0000 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N7715E </td>\n   <td style=\"text-align:right;\"> 188.0000 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N654UA </td>\n   <td style=\"text-align:right;\"> 185.0000 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N665MQ </td>\n   <td style=\"text-align:right;\"> 174.6667 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N427SW </td>\n   <td style=\"text-align:right;\"> 157.0000 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n`sqrrl` also provides a wrapper around the python utility `sqlformat` that can be used to pretty-print SQL formats.\n\n\n::: {.cell hash='index_cache/html/flights-avg-arr-delay-query_2102617ed2597b39ae99b0450d0ab1bb'}\n\n```{.r .cell-code}\nSELECT('tailnum', delay = 'avg(arr_delay)', n = 'count(*)') %+%\n  FROM('flights') %+%\n  GROUP_BY('tailnum') %+%\n  ORDER_BY(DESC('delay')) %+%\n  LIMIT(10) %>%\n  sqlformat %>% cat\n```\n\n```sql\nSELECT tailnum,\n       avg(arr_delay) AS delay,\n       count(*) AS n\n  FROM flights\n GROUP BY tailnum\n ORDER BY delay DESC\n LIMIT 10\n```\n:::\n\n\nLet's use the above as an inner query and filter on `n > 100`:\n\n\n::: {.cell hash='index_cache/html/flights-avg-arr-delay-gt-100_f08936fac79d7bddd51295b13dbda71e'}\n\n```{.r .cell-code}\nquery_all_arr_delay <- SELECT(\n  'tailnum', delay = 'avg(arr_delay)', n = 'count(*)'\n) %+%\n  FROM('flights') %+%\n  GROUP_BY('tailnum') %+%\n  ORDER_BY(DESC('delay'))\n\nSELECT() %+%\n  FROM(delay = parens(query_all_arr_delay)) %+%\n  WHERE(gt(n = 100)) %+%\n  LIMIT(10) %>%\n  flights %>%\n  as_table\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> tailnum </th>\n   <th style=\"text-align:right;\"> delay </th>\n   <th style=\"text-align:right;\"> n </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> N11119 </td>\n   <td style=\"text-align:right;\"> 30.30657 </td>\n   <td style=\"text-align:right;\"> 148 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N16919 </td>\n   <td style=\"text-align:right;\"> 29.88745 </td>\n   <td style=\"text-align:right;\"> 251 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N14998 </td>\n   <td style=\"text-align:right;\"> 27.92202 </td>\n   <td style=\"text-align:right;\"> 230 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N15910 </td>\n   <td style=\"text-align:right;\"> 27.61132 </td>\n   <td style=\"text-align:right;\"> 280 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N13123 </td>\n   <td style=\"text-align:right;\"> 25.97345 </td>\n   <td style=\"text-align:right;\"> 121 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N11192 </td>\n   <td style=\"text-align:right;\"> 25.85235 </td>\n   <td style=\"text-align:right;\"> 154 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N14950 </td>\n   <td style=\"text-align:right;\"> 25.28780 </td>\n   <td style=\"text-align:right;\"> 219 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N21130 </td>\n   <td style=\"text-align:right;\"> 24.96610 </td>\n   <td style=\"text-align:right;\"> 126 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N24128 </td>\n   <td style=\"text-align:right;\"> 24.91803 </td>\n   <td style=\"text-align:right;\"> 129 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> N22971 </td>\n   <td style=\"text-align:right;\"> 24.74766 </td>\n   <td style=\"text-align:right;\"> 230 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Queries are just strings\n\nNotice that unlike other packages, `sqrrl` can't build the nested queries for you.\nYou still need to understand the structure of the database and the structure of the query.\n\nBut when compared with the final output of the query, the `sqrrl` version looks a lot like SQL transliterated into R functions.\n\n\n::: {.cell hash='index_cache/html/flights-avg-arr-delay-gt-100-query_bbbfff6eeed9b239857c1f49697dfb5d'}\n\n```{.r .cell-code}\nSELECT() %+%\n  FROM(delay = parens(\n    SELECT('tailnum', delay = 'avg(arr_delay)', n = 'count(*)') %+%\n      FROM('flights') %+%\n      GROUP_BY('tailnum') %+%\n      ORDER_BY(DESC('delay'))\n  )) %+%\n  WHERE(gt(n = 100)) %+%\n  LIMIT(10) %>%\n  sqlformat() %>%\n  cat()\n```\n\n```sql\nSELECT *\n  FROM (\n        SELECT tailnum,\n               avg(arr_delay) AS delay,\n               count(*) AS n\n          FROM flights\n         GROUP BY tailnum\n         ORDER BY delay DESC\n       ) delay\n WHERE n>100\n LIMIT 10\n```\n:::\n\n\nFor me, at least, where the goal is to write SQL queries as bare strings, `sqrrl` lets me write in R and think in SQL without having to add a huge number of `paste` and `paste0` functions.\n\nEverything in `sqrrl` takes input data from regular R data types and outputs an SQL snippet.\n\nFor an example of nearly everything each of the functions can do, see the [Getting Started][sqrrl-start] section in the documentation.\n\n## A more complicated SELECT query\n\nAs a final example, here is a fully-loaded select query.\n\n\n::: {.cell hash='index_cache/html/flights-big-example_dbf71458d45b70afcd3ef373f27288c5'}\n\n```{.r .cell-code}\nSELECT('`year`', 'carrier', 'flight', 'dest',\n       n = 'count(*)',\n       avg_dist = 'avg(distance)',\n       avg_air_time = 'avg(air_time)') %+%\n  FROM(f = 'flights') %+%\n  WHERE(\n    BETWEEN('month', 6, 12),\n    'carrier' %IN% c(\"UA\", \"AA\", \"US\", \"WN\"),\n    geq('dep_time' = 800),\n    leq('air_time' = 120),\n    'origin' %LIKE% 'JFK'\n  ) %+%\n  GROUP_BY('`year`', 'carrier', 'flight', 'dest') %+%\n  ORDER_BY(DESC('n')) %+%\n  LIMIT(10) %>%\n  { sqlformat(.) %>% cat; . } %>%\n  flights %>%\n  as_table\n```\n\n```sql\nSELECT `year`,\n       carrier,\n       flight,\n       dest,\n       count(*) AS n,\n       avg(distance) AS avg_dist,\n       avg(air_time) AS avg_air_time\n  FROM flights f\n WHERE `month` BETWEEN 6 AND 12\n   AND carrier IN (\"UA\", \"AA\", \"US\", \"WN\")\n   AND dep_time>=800\n   AND air_time<=120\n   AND origin LIKE(\"JFK\")\n GROUP BY `year`,\n          carrier,\n          flight,\n          dest\n ORDER BY n DESC\n LIMIT 10\n```\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> year </th>\n   <th style=\"text-align:left;\"> carrier </th>\n   <th style=\"text-align:right;\"> flight </th>\n   <th style=\"text-align:left;\"> dest </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> avg_dist </th>\n   <th style=\"text-align:right;\"> avg_air_time </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> US </td>\n   <td style=\"text-align:right;\"> 1831 </td>\n   <td style=\"text-align:left;\"> CLT </td>\n   <td style=\"text-align:right;\"> 178 </td>\n   <td style=\"text-align:right;\"> 541 </td>\n   <td style=\"text-align:right;\"> 86.95506 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> US </td>\n   <td style=\"text-align:right;\"> 425 </td>\n   <td style=\"text-align:left;\"> CLT </td>\n   <td style=\"text-align:right;\"> 126 </td>\n   <td style=\"text-align:right;\"> 541 </td>\n   <td style=\"text-align:right;\"> 84.92857 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> AA </td>\n   <td style=\"text-align:right;\"> 178 </td>\n   <td style=\"text-align:left;\"> BOS </td>\n   <td style=\"text-align:right;\"> 119 </td>\n   <td style=\"text-align:right;\"> 187 </td>\n   <td style=\"text-align:right;\"> 37.94118 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> AA </td>\n   <td style=\"text-align:right;\"> 256 </td>\n   <td style=\"text-align:left;\"> BOS </td>\n   <td style=\"text-align:right;\"> 117 </td>\n   <td style=\"text-align:right;\"> 187 </td>\n   <td style=\"text-align:right;\"> 39.13675 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> AA </td>\n   <td style=\"text-align:right;\"> 2314 </td>\n   <td style=\"text-align:left;\"> BOS </td>\n   <td style=\"text-align:right;\"> 115 </td>\n   <td style=\"text-align:right;\"> 187 </td>\n   <td style=\"text-align:right;\"> 37.85217 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> US </td>\n   <td style=\"text-align:right;\"> 1802 </td>\n   <td style=\"text-align:left;\"> CLT </td>\n   <td style=\"text-align:right;\"> 112 </td>\n   <td style=\"text-align:right;\"> 541 </td>\n   <td style=\"text-align:right;\"> 87.23214 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> AA </td>\n   <td style=\"text-align:right;\"> 84 </td>\n   <td style=\"text-align:left;\"> BOS </td>\n   <td style=\"text-align:right;\"> 101 </td>\n   <td style=\"text-align:right;\"> 187 </td>\n   <td style=\"text-align:right;\"> 37.95049 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> AA </td>\n   <td style=\"text-align:right;\"> 1850 </td>\n   <td style=\"text-align:left;\"> BOS </td>\n   <td style=\"text-align:right;\"> 94 </td>\n   <td style=\"text-align:right;\"> 187 </td>\n   <td style=\"text-align:right;\"> 38.46809 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> AA </td>\n   <td style=\"text-align:right;\"> 1838 </td>\n   <td style=\"text-align:left;\"> BOS </td>\n   <td style=\"text-align:right;\"> 93 </td>\n   <td style=\"text-align:right;\"> 187 </td>\n   <td style=\"text-align:right;\"> 37.83871 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> AA </td>\n   <td style=\"text-align:right;\"> 1762 </td>\n   <td style=\"text-align:left;\"> BOS </td>\n   <td style=\"text-align:right;\"> 86 </td>\n   <td style=\"text-align:right;\"> 187 </td>\n   <td style=\"text-align:right;\"> 38.47674 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nThis query and table select the most popular flights from JFK between June and December of 2013 from the carriers `UA`, `AA`, `US`, and `WN` that depart JFK after 8:00 AM and have an air time of less than 2 hours.\n\n## Learn more\n\nThere's more that the package can do, like `JOIN`s, `INSERT`s, and `UPDATE`s that I haven't gone into here.\n\nThere are also a number of wrappers, [comparison operators](https://gadenbuie.github.io/sqrrl/reference/comparison.html) and [concatenators](https://gadenbuie.github.io/sqrrl/reference/general.html) that can be used for wrapping strings in quotes --- e.g. `quotes()` --- comparing columns to values --- e.g. `geq()`, `eq()`, `lt()`, `neq()` --- and stringing together statements --- e.g. `AND()`, `OR()`, `%LIKE%`, `%IN%`, `BETWEEN()`.\n\nThere's an example of nearly every single function and each of it's possible configurations in the [package documentation][sqrrl-docs].\n\nHopefully this package is useful to someone other than myself (like you!).\nIf you run into any problems, [let me know](http://twitter.com/grrrck) or [submit an issue on GitHub](https://github.com/gadenbuie/sqrrl/issues).\n\n\n\n\n\n[sqrrl-src]: https://github.com/gadenbuie/sqrrl/\n[sqrrl-docs]: https://gadenbuie.github.io/sqrrl/\n[sqrrl-start]: https://gadenbuie.github.io/sqrrl/articles/sqrrl.html\n[shiny]: https://shiny.rstudio.com",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}