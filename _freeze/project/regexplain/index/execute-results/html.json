{
  "hash": "5b8a6489ef53884e085cd696c632644c",
  "result": {
    "markdown": "---\ntitle: \"üïµÔ∏è‚Äç‚ôÇÔ∏è RegExplain\"\nslug: \"regexplain\"\ndescription: \"An RStudio addin slash utility belt for regular expressions\"\nimage: regexplain-gadget-tabs.png\ndate: 2018-04-04T00:00:00+00:00\ntype: project\ncategories:\n  - Project\ntags: [\"R\", \"R Package\", \"Shiny\", \"RStudio\", \"Addin\", \"Gadget\"]\nlinks:\n- icon: github\n  name: Source\n  url: https://github.com/gadenbuie/regexplain\n- icon: lightbulb-fill\n  name: Try the App\n  url: \"/project/regexplain/#demo\"\n- icon: download\n  name: Installation\n  url: \"/project/regexplain/#installation\"\n- icon: info-circle-fill\n  name: Usage\n  url: /project/regexplain/#overview\n---\n\n\n\n\n[regexplain-src]: https://github.com/gadenbuie/regexplain\n\n<!-- https://buttons.github.io/ -->\n<a class=\"github-button\" href=\"https://github.com/gadenbuie\" data-show-count=\"true\" aria-label=\"Follow @gadenbuie on GitHub\">Follow &commat;gadenbuie</a>&nbsp;\n<a class=\"github-button\" href=\"https://github.com/gadenbuie/regexplain\" data-icon=\"octicon-star\" data-show-count=\"true\" aria-label=\"Star gadenbuie/regexplain on GitHub\">Star</a>&nbsp;\n<a class=\"github-button\" href=\"https://github.com/gadenbuie/regexplain/fork\" data-icon=\"octicon-repo-forked\" data-show-count=\"true\" aria-label=\"Fork gadenbuie/regexplain on GitHub\">Fork</a>\n\n#### *Regular expressions are tricky.* RegExplain *makes it easier to see what you‚Äôre doing.*\n\n**RegExplain** is an RStudio addin slash utility belt for regular\nexpressions. Interactively build your regexp, check the output of common\nstring matching functions, consult the interactive help pages, or use\nthe included resources to learn regular expressions. And more.\n\nInspired by [RegExr.com](https://regexr.com/) and `stringr::str_view()`.\n\n## Installation\n\nInstallation is easy with `devtools`\n\n``` r\ndevtools::install_github(\"gadenbuie/regexplain\")\n```\n\nor for hands-free installation\n\n    source(\"https://install-github.me/gadenbuie/regexplain\")\n\n## Try it out! {#demo}\n\n<iframe src=\"https://apps.garrickadenbuie.com/regexplain/\" style=\"border: #DDDDDD 2px solid; background-color: #F9F9F9; width: 650px; height: 750px\">\n<p>Your browser doesn't support <code>iframes</code> or you have blocker enabled.\nYou can try the regexplain addin live at <a href=\"https://apps.garrickadenbuie.com/regexplain\">https://apps.garrickadenbuie.com/regexplain</a>.\n</iframe>\n\nA demo version of the app is available online at <a href=\"https://apps.garrickadenbuie.com/regexplain\">https://apps.garrickadenbuie.com/regexplain</a>.\nClicking the \"Cancel\" or \"Send RegEx To Console\" buttons will kill the app.\nReload this page to restart the app.\n\n## RegExplain in Action\n\n#### Overview\n\n![RegExplain Selection](regexplain-selection.gif)\n\n#### Regular Expressions Library\n\n![RegExplain Library](regexplain-library.gif)\n\n#### Try the Built-In Examples\n\n![RegExplain Examples](regexplain-try-this.gif)\n\n## RStudio Addin\n\nThe main feature of this package is the RStudio Addin **RegExplain\nSelection**. Just select the text or object containing text (such as the\nvariable name of a vector or a data.frame column) and run **RegExplain\nSelection** from the RStudio Addins\ndropdown.\n\n<img src=\"rstudio-addin-list.png\" width = \"250px;\" alt=\"regexplain in the Rstudio Addins dropdown\">\n\nThe addin will open an interface with 4 panes where you can\n\n  - edit the **text** you‚Äôve imported\n  - build up a **regex** expression and interactively see it applied to\n    your text\n  - test the **output** of common string matching and replacement\n    functions from `base` and `stringr`\n  - and refer to a **help**ful cheatsheet\n\n<a href=\"regexplain-gadget-tabs.png\" data-featherlight=\"image\">\n<img src=\" regexplain-gadget-tabs.png \" alt=\" The panes of regexplain \"   >\n</a>\n\n\nWhen you‚Äôre done, click on the **Send Regex to Console** to send your\nregex expression to‚Ä¶ the\nconsole\\!\n\n``` r\n> pattern <- \"\\\\b(red|orange|yellow|green|blue|purple|white|brown)(?:\\\\s(\\\\w+))?\"\n```\n\nNotice that *RegExplain* handled the extra backslashes needed for\nstoring the RegEx characters `\\b`, `\\s`, and `\\w`. Inside the gadget you\ncan use regular old regular expressions as you found them in the wild\n(hello, [Stack\nOverflow](https://stackoverflow.com/questions/tagged/regex)\\!).\n\n### Help and Cheat Sheet\n\nThe **Help** tab is full of resources, guides, and R packages and\nincludes an easy-to-navigate reference of commonly used regular\nexpression syntax.\n\n<a href=\"regexplain-gadget-help.png\" data-featherlight=\"image\">\n<img src=\" regexplain-gadget-help.png \" alt=\" regexplain help windows \"   >\n</a>\n\n\nOpen **RegExplain Cheatsheet** from the RStudio Addins drop down to open\nthe regex reference page in the Viewer pane without blocking your\ncurrent R session.\n\n### Import Your Text\n\nThere are two ways to get your text into *RegExplain*. The first way was\ndescribed above: select an object name or lines of text or code in the\nRStudio source pane and run **RegExplain Selection**. To import text\nfrom a file, use **RegExplain File** to you import the text you want to\nprocess with regular expressions.\n\nWhen importing text, *RegExplain* automatically reduces the text to the\nunique entries and limits the number of lines.\n\n<a href=\"addin-screenshots.png\" data-featherlight=\"image\">\n<img src=\" addin-screenshots.png \" alt=\" regexplain addins \"   >\n</a>\n\n\n### Regular Expressions Library\n\nThe *RegExplain* gadget includes a regular expressions library in the\n**RegEx** tab. The library features common regular expressions, sourced\nfrom [qdapRegex](https://github.com/trinker/qdapRegex) and [Regex\nHub](https://projects.lukehaas.me/regexhub), with several additional\npatterns.\n\nThe full library is stored as a JSON file in\n[inst/extdata/patterns.json](https://github.com/gadenbuie/regexplain/blob/master/inst/extdata/patterns.json), feel free to\ncontribute patterns you find useful or use regularly via pull\nrequest.\n\n<a href=\"regexplain-gadget-library.png\" data-featherlight=\"image\">\n<img src=\" regexplain-gadget-library.png \" alt=\" regexplain library modal \"  height=\"400px\" >\n</a>\n\n\n## View Static Regex Results\n\n*RegExplain* provides the function `view_regex()` that you can use as a\n`stringr::str_view()` replacement. In addition to highlighting matched\nportions of the text, `view_regex()` colorizes groups and attempts to\ncolorize the regex expression itself as well.\n\n``` r\ntext <- c(\"breakfast=eggs;lunch=pizza\",\n          \"breakfast=bacon;lunch=spaghetti\",\n          \"no food here\")\npattern <- \"((\\\\w+)=)(\\\\w+).+(ch=s?p)\"\n\nview_regex(text, pattern)\n```\n\n<a href=\"view-regex.png\" data-featherlight=\"image\">\n<img src=\" view-regex.png \" alt=\" Example view_regex(text, pattern). \"   >\n</a>\n\n\n``` r\nt_nested <- \"anestedgroupwithingroupexample\"\nr_nested <- \"(a(nested)(group(within(group))(example)))\"\nview_regex(t_nested, r_nested)\n```\n\n<a href=\"view-nested.png\" data-featherlight=\"image\">\n<img src=\" view-nested.png \" alt=\" Example of nested groups \"   >\n</a>\n\n\n## Notes\n\nRegular expressions are nothing if not a collection of corner cases.\nTrying to pass regular expressions through Shiny and HTML inputs is a\nbit of a labyrinth. For now, assume any issues or oddities you\nexperience with this addin are entirely my fault and have nothing to do\nwith the fine packages this addin is built on. If you do find an issue,\n[please file an issue](https://github.com/gadenbuie/regexplain). Pull\nrequests are welcomed!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}