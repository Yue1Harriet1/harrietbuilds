{
  "hash": "9dff25f2975f5111286a71065264a497",
  "result": {
    "markdown": "---\ntitle: \"{epoxy}\"\ndescription: \"Extra-strength glue for scripts, reports, and apps\"\nsummary: \"Extra-strength glue for scripts, reports, and apps\"\ndate: '2023-09-20'\nslug: epoxy\nimage: epoxy-social.png\ntags:\n  - R Markdown\n  - R Package\n  - Quarto\n  - Shiny\n  - epoxy\npackage: epoxy\nlinks:\n- icon: book # icon name without the 'fa-'\n  name: Docs\n  url: https://pkg.garrickadenbuie.com/epoxy/\n- icon: braces-asterisk # icon name without the 'fa-'\n  name: CRAN\n  url: https://cran.r-project.org/package=epoxy\n- icon: robot # icon name without the 'fa-'\n  name: r-universe\n  url: https://gadenbuie.r-universe.dev/ui#package:epoxy\n- icon: github # icon name without the 'fa-'\n  name: Source\n  url: https://github.com/gadenbuie/epoxy\n---\n\n\n<!-- https://buttons.github.io/ -->\n\n```{=html}\n<a class=\"github-button\" href=\"https://github.com/gadenbuie\" data-show-count=\"true\" aria-label=\"Follow @gadenbuie on GitHub\">Follow &commat;gadenbuie</a>&nbsp;\n<a class=\"github-button\" href=\"https://github.com/gadenbuie/{{< meta package >}}\" data-icon=\"octicon-star\" data-show-count=\"true\" aria-label=\"Star gadenbuie/{{< meta package >}} on GitHub\">Star</a>&nbsp;\n<a class=\"github-button\" href=\"https://github.com/gadenbuie/{{< meta package >}}/fork\" data-icon=\"octicon-repo-forked\" data-show-count=\"true\" aria-label=\"Fork gadenbuie/{{< meta package >}} on GitHub\">Fork</a>\n```\n\n::: {.cell}\n::: {.cell-output-display}\n\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n<h1 align=\"center\">\n<a href='http://pkg.garrickadenbuie.com/epoxy/'><img src=\"https://pkg.garrickadenbuie.com/epoxy/logo.png\" align=\"center\" height=\"250\" alt=\"epoxy logo\" /></a><br/>\n{epoxy}\n</h1>\n<p align=\"center\">\n<b>extra-strength <a href=\"https://glue.tidyverse.org\">glue</a></b> for\nscripts, reports, and apps.\n</p>\n<p align=\"center\">\n<!-- badges: start -->\n<a href=\"https://CRAN.R-project.org/package=epoxy\"><img src=\"https://www.r-pkg.org/badges/version/epoxy\" alt=\"CRAN status\" /></a>\n<a href=\"https://gadenbuie.r-universe.dev\"><img src=\"https://gadenbuie.r-universe.dev/badges/epoxy\" alt=\"epoxy r-universe badge\" /></a>\n<a href=\"https://github.com/gadenbuie/epoxy/actions\"><img src=\"https://github.com/gadenbuie/epoxy/workflows/R-CMD-check/badge.svg\" alt=\"R-CMD-check\" /></a>\n<a href=\"https://app.codecov.io/gh/gadenbuie/epoxy?branch=main\"><img src=\"https://codecov.io/gh/gadenbuie/epoxy/branch/main/graph/badge.svg\" alt=\"Codecov test coverage\" /></a>\n<a href=\"https://github.com/gadenbuie/epoxy/blob/main/LICENSE.md\" alt=\"MIT Licensed.\"><img src=\"https://img.shields.io/badge/License-MIT-blue.svg\" /></a>\n<!-- badges: end -->\n</p>\n\n## epoxy is super glue\n\n### [In R Markdown and Quarto reports](https://pkg.garrickadenbuie.com/epoxy/articles/epoxy-report.html)\n\nUse `epoxy` chunks for extra-strength inline syntax. Just\n`library(epoxy)` in your [R Markdown](https://rmarkdown.rstudio.com) or\n[Quarto](https://quarto.org) document to get started. All epoxy chunks\nmake it easy to transform values in place with a `{cli}`-inspired inline\nsyntax described in `?epoxy_transform_inline`.\n\n### [In R scripts](https://pkg.garrickadenbuie.com/epoxy/articles/epoxy-script.html)\n\nThe same functions that power epoxy chunks are availble in three\nflavors:\n\n- `epoxy()` for markdown and general purpose outputs\n\n- `epoxy_html()` for HTML outputs, with added support for HTML\n  templating (see `?epoxy_transform_html`)\n\n- `epoxy_latex()` for LaTeX reports\n\nThese functions are accompanied by a robust system for chained\nglue-transformers powered by `epoxy_transform()`.\n\n### [In Shiny apps](https://pkg.garrickadenbuie.com/epoxy/articles/epoxy-shiny.html)\n\n`ui_epoxy_html()` makes it easy to update text or HTML dynamically,\nanywhere in your [Shiny](https://shiny.posit.co/) app’s UI. For more\ncomplicated situations, `ui_epoxy_mustache()` lets you turn any Shiny UI\ninto a template that leverages the [Mustache templating\nlanguage](https://mustache.github.io).\n\n## epoxy in R Markdown and Quarto documents\n\nIn [R Markdown](https://rmarkdown.rstudio.com) and\n[Quarto](https://quarto.org) documents, **epoxy** gives you an `epoxy`\nchunk where you can write in markdown, blending prose and data using\n[glue](https://glue.tidyverse.org)’s template syntax.\n\nHere’s an example using a small list containing data about a `movie`\n(expand the section below to see the full code for `movie`). We can use\nthe inline transformer to format the replacement text as we build up a\ndescription from this data.\n\n<details>\n<summary>\nMovie data\n</summary>\n\n``` r\nmovie <- list(\n  year = 1989,\n  title = \"Back to the Future Part II\",\n  budget = 4e+07,\n  domgross = 118450002,\n  imdb_rating = 7.8,\n  actors = c(\n    \"Michael J. Fox\",\n    \"Christopher Lloyd\",\n    \"Lea Thompson\",\n    \"Thomas F. Wilson\"\n  ),\n  runtime = 108L\n)\n```\n\n</details>\n\n```` default\n```{epoxy}\nThe movie {.emph {.titlecase movie$title}}\nwas released in {.strong movie$year}.\nIt earned {.dollar movie$domgross}\nwith a budget of {.dollar movie$budget},\nand it features movie stars\n{.and movie$actors}.\n```\n````\n\n<blockquote>\nThe movie *Back to the Future Part II* was released in **1989**. It\nearned \\$118,450,002 with a budget of \\$40,000,000, and it features\nmovie stars Michael J. Fox, Christopher Lloyd, Lea Thompson, and Thomas\nF. Wilson.\n</blockquote>\n\nLearn more about `epoxy` chunks – and its siblings `epoxy_html` and\n`epoxy_latex` – in [Getting\nStarted](https://pkg.garrickadenbuie.com/epoxy//articles/epoxy.html). Or\nread more about epoxy’s inline formatting in `?epoxy_transform_inline`.\n\n## Installation\n\nYou can install epoxy from CRAN:\n\n``` r\ninstall.packages(\"epoxy\")\n```\n\nYou can install the latest development version of epoxy with\n[remotes](https://remotes.r-lib.org)\n\n``` r\n# install.packages(\"remotes\")\nremotes::install_github(\"gadenbuie/epoxy\")\n```\n\nor from [gadenbuie.r-universe.dev](https://gadenbuie.r-universe.dev).\n\n``` r\noptions(repos = c(\n  gadenbuie = \"https://gadenbuie.r-universe.dev/\",\n  getOption(\"repos\")\n))\n\ninstall.packages(\"epoxy\")\n```\n\n## Setup\n\n``` r\nlibrary(epoxy)\n```\n\nLoading epoxy adds four new [knitr\nengines](https://bookdown.org/yihui/rmarkdown/language-engines.html), or\nchunk types. Each type lets you intermix text with R code or data\n(`expr` in the table below), and each is geared toward a different\noutput context.\n\n| Engine        | Output Context       |                         Delimiter                         |\n|:--------------|:---------------------|:---------------------------------------------------------:|\n| `epoxy`       | all-purpose markdown |                         `{expr}`                          |\n| `epoxy_html`  | HTML                 |                        `{{expr}}`                         |\n| `epoxy_latex` | LaTeX                |                        `<<expr>>`                         |\n| `whisker`     | all-purpose          | [mustache template language](https://mustache.github.io/) |\n\n⚠️ **Caution:** Previously, epoxy provided a `glue` engine, but this\nconflicts with a similar chunk engine by the\n[glue](https://glue.tidyverse.org) package. You can update existing\ndocuments to use the `epoxy` engine, or you can explicitly use epoxy’s\n`glue` chunk by including the following in your setup chunk.\n\n``` r\nuse_epoxy_glue_engine()\n```\n\n## Use epoxy\n\nTo use epoxy in your R Markdown document, create a new chunk using the\nengine of your choice. In that chunk, write in markdown, HTML, or LaTeX\nas needed, wrapping R expressions inside the delimiters for the epoxy\nchunk.\n\n```` default\n```{epoxy}\nThe average speed of the cars was **{mean(cars$speed)} mph.**\nBut on average the distance traveled was only _{mean(cars$dist)}_.\n```\n````\n\nThe average speed of the cars was **15.4 mph**. But on average the\ndistance traveled was only *42.98 ft*.\n\n`epoxy` is built around `glue::glue()`, which evaluates the R\nexpressions in the `{ }` and inserts the results into the string. The\nchunk above is equivalent to this call to `glue::glue()`:\n\n``` r\nglue::glue(\"The average speed of the cars was **{mean(cars$speed)} mph**.\nBut on average the distance traveled was only _{mean(cars$dist)} ft_.\")\n#> The average speed of the cars was **15.4 mph**.\n#> But on average the distance traveled was only _42.98 ft_.\n```\n\nOne immediate advantage of using `epoxy` instead of `glue::glue()` is\nthat RStudio’s autocompletion feature works inside `epoxy` chunks!\nTyping `cars$` in the chunk will suggest the columns of `cars`.\n\n## Learn more\n\nThere’s a whole lot more that epoxy can do! Learn more:\n\n- [epoxy Package Documentation](https://pkg.garrickadenbuie.com/epoxy/)\n\n- [Getting\n  Started](https://pkg.garrickadenbuie.com/epoxy//articles/epoxy.html)\n\n- [Inline Reporting with\n  epoxy](https://pkg.garrickadenbuie.com/epoxy//articles/inline-reporting.html)\n\n## Code of Conduct\n\nPlease note that the epoxy project is released with a [Contributor Code\nof Conduct](http://pkg.garrickadenbuie.com/epoxy/CODE_OF_CONDUCT.html).\nBy contributing to this project, you agree to abide by its terms.\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}