{
  "hash": "2cfa6df12a8d86a6ee0f6f5c45852ad0",
  "result": {
    "markdown": "---\ntitle: \"üçë ggpomological: A Pomological ggplot2 Theme\"\nauthor: Garrick Aden-Buie\ndate: '2018-02-16'\nslug: ggpomological\ndescription: \"A ggplot2 theme based on the USDA Pomological Watercolor Collection\"\nimage: ggpomological.png\ntype: page\ncategories:\n  - Project\ntags:\n  - R\n  - ggplot2\n  - R Package\n  - Visualization\nlinks:\n- icon: github\n  name: Source\n  url: https://github.com/gadenbuie/ggpomological/\n- icon: book\n  name: Readme\n  url: https://github.com/gadenbuie/ggpomological/#readme\n---\n\n\n\n\n<!-- LINKS -->\n\n[rstudioconf]:   https://www.rstudio.com/conference/\n[t-aronatkins]:  https://twitter.com/aronatkins\n[rsconf-slides]: https://github.com/rstudio/rstudio-conf/tree/master/2018/Fruit_For_Thought--Aron_Atkins\n[rsconf-video]:  https://youtu.be/Ol1FjFR2IMU?t=5h21m15s\n[usda-pom]:      https://usdawatercolors.nal.usda.gov/pom\n[t-pomological]: https://twitter.com/pomological\n[magick]:        https://cran.r-project.org/web/packages/magick/index.html\n[dplyr]:         http://dplyr.tidyverse.org/\n[ggplot2]:       http://ggplot2.tidyverse.org/\n[ggpomological]: https://github.com/gadenbuie/ggpomological\n\n<!-- https://buttons.github.io/ -->\n<a class=\"github-button\" href=\"https://github.com/gadenbuie\" data-show-count=\"true\" aria-label=\"Follow @gadenbuie on GitHub\">Follow &commat;gadenbuie</a>&nbsp;\n<a class=\"github-button\" href=\"https://github.com/gadenbuie/ggpomological\" data-icon=\"octicon-star\" data-show-count=\"true\" aria-label=\"Star gadenbuie/ggpomological on GitHub\">Star</a>&nbsp;\n<a class=\"github-button\" href=\"https://github.com/gadenbuie/ggpomological/fork\" data-icon=\"octicon-repo-forked\" data-show-count=\"true\" aria-label=\"Fork gadenbuie/ggpomological on GitHub\">Fork</a>\n\n\n::: {.cell hash='index_cache/html/header-demo_464e818b5209df61ae4e3e76dbd81171'}\n\n:::\n\n\n![](.//ggpomological.png)\n\n## A brief history\n\nAron Atkins ([\\@aronatkins][t-aronatkins]) gave a great talk at [rstudio::conf 2018][rstudioconf] about a subject near and dear to my heart: parameterized RMarkdown.\nAnd apples.\n\n> I did not know about R Markdown parameterized reports...just params in the YAML and boom! Repeated analyses without messing with the original report code. Also, [@aronatkins](https://twitter.com/aronatkins?ref_src=twsrc%5Etfw) really likes üçé [#rstudioconf](https://twitter.com/hashtag/rstudioconf?src=hash&ref_src=twsrc%5Etfw) [pic.twitter.com/g2OC2lTnJc](https://t.co/g2OC2lTnJc)\n>\n> ‚Äî Larie (@lariebyrd) [February 3, 2018](https://twitter.com/lariebyrd/status/959919533820583936?ref_src=twsrc%5Etfw)\n\nIn his talk, he designed a parameterized RMarkdown report that would provide the user with a customized report for their selected fruit and pulling in images from the [USDA Pomological Watercolor Collection][usda-pom].\nI had never heard of the pomological watercolors -- or the fan club twitter account [\\@pomological][t-pomological] -- until watching his talk.\nIt's a treasure trove of thousands of watercolor images of fruits; beautiful images with intricate details and a very unique and stunning palette.\nThe perfect palette for a custom [ggplot2] theme.\n\n![](.//pom-examples.jpg)\n\n> The collection spans the years 1886 to 1942.\n> The majority of the paintings were created between 1894 and 1916.\n> The plant specimens represented by these artworks originated in 29 countries and 51 states and territories in the U.S.\n> There are 7,497 watercolor paintings, 87 line drawings, and 79 wax models created by approximately 21 artists.\n> [[USDA National Agricultural Library](https://usdawatercolors.nal.usda.gov/pom/about.xhtml)]\n\nI pulled together a small set of functions into a [simple package called **ggpomological**][ggpomological] that provides a custom, pomological-inspired ggplot2 theme.\n\nBefore reading more about **ggpomological**, you should really check out [Aron's talk][rsconf-video] or [his slides][rsconf-slides].\n\n## Installation\n\n[ggpomological] lives on GitHub for now (and probably ever), so you'll need to use the devtools (or similar) to install:\n\n```r\n# if you don't have devtools\ninstall.packages(\"devtools\")\n\ndevtools::install_github(\"gadenbuie/ggpomological\")\n```\n\n## Color Palette\n\nThe first thing I did after watching Aron's talk was to browse through the [pomological watercolors collection][usda-pom], downloading images of a wide variety of fruits.\nI didn't do this in any systematic way, other than occasionally searching for a particular type of fruit, like \"grape\" or \"papaya\".\n\nFrom these images, I used an application (that I installed forever ago and apparently is no longer around) called ColorSchemer Studio to pull out a set of colors that I felt represented the collection.\n\nI ended up with **a lot** of colors.\n\n![](.//pomological_colors.png)\n\nFrom this list, I chose just a few that I thought worked well together for color and fill scales\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_ff8e66da1b91b512747f3afa13e671d7'}\n\n```{.r .cell-code}\nscales::show_col(ggpomological:::pomological_palette)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nand a few colors for the plot background and decoration\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_e606af254c354c35e527179f05c57387'}\n\n```{.r .cell-code}\nscales::show_col(unlist(ggpomological:::pomological_base))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n## Setup theme and scales\n\nI created three variants of the theme-generating function `theme_pomological()`.\n\n- `theme_pomological()` sets the plot theme to be representative of the paper and styling of the watercolors and includes a paper-colored background,\n\n- `theme_pomological_plain()` has the same styling, just with a transparent (or white) background,\n\n- `theme_pomological_fancy()` has the paper-colored background and defaults to a fancy handwritten font ([Homemade Apple](https://fonts.google.com/specimen/Homemade+Apple/)).\n\nFor color and fill scales, **ggpomological** provides `scale_color_pomological()` and `scale_fill_pomological()`.\n\nIn the future, I might revisit this package to\n\n1. Increase colors in discrete scale\n\n2. Setup paired color scales as there are lots of great color pairs in the extracted colors\n\n3. Set up continuous scale colors.\n\n## Fonts\n\nTo get the fully authentic pomological look you really need a handwritten font style, and I found a few from Google Fonts that fit the bill.\n\n- [Mr. De Haviland](https://fonts.google.com/specimen/Mr+De+Haviland)\n- [Homemade Apple](https://fonts.google.com/specimen/Homemade+Apple/)\n- [Marck Script](https://fonts.google.com/specimen/Marck+Script/)\n- [Mr. Bedfort](https://fonts.google.com/specimen/Mr+Bedfort/)\n\nAlternatively, you can use something like [calligrapher.com](https://www.calligraphr.com/) to create your own handwriting font!\n\nBut fonts can be painful in R, so the base functions -- `theme_pomological()` and `theme_pomological_plain()` -- don't change the font by default.\nTo opt into the full pomological effect, use `theme_pomological_fancy()` which is just an alias for `theme_pomological(base_family = \"Homemade Apple\", base_size = 16)`.\n\n\n## Add paper background!\n\nGreat, but I want my plots to look even more pomological, you say?\n\nPerfect!\n**ggpomological** provides a function named `paint_pomological` that uses the [`magick`][magick] package to add a pomological watercolor paper background and a subtle texture overlay.\n\n\n## Demo time!\n\nWe'll need [ggplot2] (loaded with **ggpomological**) and [dplyr]\n\n```r\nlibrary(ggpomological)\nlibrary(dplyr)\n```\n\n### Basic iris plot\n\n\n::: {.cell hash='index_cache/html/plot-demo_2244ff7a999ffd82d4a186940b00b799'}\n\n```{.r .cell-code}\n# Base plot\nbasic_iris_plot <- ggplot(iris) +\n  aes(x = Sepal.Length, y = Sepal.Width, color = Species) +\n  geom_point(size = 2)\n\n# Just your standard Iris plot\nbasic_iris_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-demo-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# With pomological colors\nbasic_iris_plot <- basic_iris_plot + scale_color_pomological()\nbasic_iris_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-demo-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# With pomological theme\nbasic_iris_plot + theme_pomological()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-demo-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# With transparent background\nbasic_iris_plot + theme_pomological_plain()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-demo-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Or with \"fancy\" pomological settings\npomological_iris <- basic_iris_plot + theme_pomological_fancy()\npomological_iris\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-demo-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# Painted!\npaint_pomological(pomological_iris, res = 110) %>%\n  magick::image_write(set_filename(\"plot-demo-painted.png\"))\n```\n:::\n\n\n![](.//plot-demo-painted.png)\n\n### Stacked bar chart\n\n\n\n::: {.cell hash='index_cache/html/plot-bar-chart_2a77964e3363f33cd484f468fc41be4d'}\n\n```{.r .cell-code}\nstacked_bar_plot <- ggplot(diamonds) +\n  aes(price, fill = cut) +\n  geom_histogram(binwidth = 850) +\n  xlab('Price (USD)') +\n  ylab('Count') +\n  ggtitle(\"ggpomological\") +\n  scale_x_continuous(label = scales::dollar_format()) +\n  scale_fill_pomological()\n\nstacked_bar_plot + theme_pomological(\"Homemade Apple\", 16)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-bar-chart-1.png){width=672}\n:::\n\n```{.r .cell-code}\npaint_pomological(\n  stacked_bar_plot + theme_pomological_fancy(),\n  res = 110\n) %>%\n  magick::image_write(set_filename(\"plot-bar-chart-painted.png\"))\n```\n:::\n\n\n![](.//plot-bar-chart-painted.png)\n\n### Density Plot\n\n\n::: {.cell hash='index_cache/html/plot-density_36645f2ebf0f80a64ec5eed7e0678397'}\n\n```{.r .cell-code}\ndensity_plot <- mtcars %>%\n  mutate(cyl = factor(cyl)) %>%\n  ggplot() +\n  aes(mpg, fill = cyl, color = cyl)+\n  geom_density(alpha = 0.75) +\n  labs(fill = 'Cylinders', colour = 'Cylinders', x = 'MPG', y = 'Density') +\n  scale_color_pomological() +\n  scale_fill_pomological()\n\ndensity_plot + theme_pomological(\"Homemade Apple\", 16)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-density-1.png){width=672}\n:::\n\n```{.r .cell-code}\npaint_pomological(\n  density_plot + theme_pomological_fancy(),\n  res = 110\n) %>%\n  magick::image_write(set_filename(\"plot-density-demo-painted.png\"))\n```\n:::\n\n\n![](.//plot-density-demo-painted.png)\n\n\n### Points and lines\n\nHere I'll use the `txhousing` data provided with [ggplot2]\n\n> Information about the housing market in Texas provided by the TAMU real estate center, <http://recenter.tamu.edu/>.\n\n\n::: {.cell hash='index_cache/html/plot-full-bar-stack_b55e3b7b5b7198c399c6e89559dd22ad'}\n\n```{.r .cell-code}\nbig_volume_cities <- txhousing %>%\n  group_by(city) %>%\n  summarize(mean_volume = mean(volume, na.rm = TRUE)) %>%\n  arrange(-mean_volume) %>%\n  top_n(length(ggpomological:::pomological_palette)) %>%\n  pull(city)\n\nfull_bar_stack_plot <- txhousing %>%\n  filter(city %in% big_volume_cities) %>%\n  group_by(city, year) %>%\n  summarize(mean_volume = mean(volume, na.rm = TRUE)) %>%\n  ungroup %>%\n  mutate(city = factor(city, big_volume_cities)) %>%\n  ggplot() +\n  aes(year, mean_volume, fill = city, group = city) +\n  geom_col(position = 'fill', width = 0.9) +\n  labs(x = 'City', y = 'Mean Volume', color = 'City') +\n  theme(panel.grid.minor.x = element_blank()) +\n  scale_fill_pomological()\n\nfull_bar_stack_plot + theme_pomological(\"Homemade Apple\", 16)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-full-bar-stack-1.png){width=672}\n:::\n\n```{.r .cell-code}\npaint_pomological(\n  full_bar_stack_plot + theme_pomological_fancy(),\n  res = 110\n) %>%\n  magick::image_write(set_filename(\"plot-full-bar-stack-painted.png\"))\n```\n:::\n\n\n![](.//plot-full-bar-stack-painted.png)\n\n### One last plot\n\nThis last one is in my own handwriting.\n\n\n::: {.cell hash='index_cache/html/plot-ridges_6b87399212511794c70cdae1d8838a18'}\n\n```{.r .cell-code}\nridges_pomological <- ggplot(diamonds) +\n  aes(x = carat, y = clarity, color = clarity, fill = clarity) +\n  ggridges::geom_density_ridges(alpha = 0.75) +\n  theme_pomological(\n    base_family = 'gWriting',\n    base_size = 20,\n    base_theme = ggridges::theme_ridges()\n    ) +\n  scale_fill_pomological() +\n  scale_color_pomological()\n\npaint_pomological(ridges_pomological, res = 110) %>%\n  magick::image_write(set_filename(\"plot-ridges-painted.png\"))\n```\n:::\n\n\n![](.//plot-ridges-painted.png)\n\n\n## Thanks to these related packages\n\nI learned a lot about how to set up a [ggplot2] package theme from [\\@hrbrmstr's](https://twitter.com/hrbrmstr) [hrbrthemes](https://github.com/hrbrmstr/hrbrthemes) package.\nI highly recommend checking that out, in most cases you can just add `+ theme_ipsum()` to your ggplot and get an amazingly good looking plot.\n\nI also recommend taking a look at [ggthemes](https://github.com/jrnold/ggthemes), [ggthemr](https://github.com/cttobin/ggthemr) and the [lato ggplot2 theme](https://github.com/briandconnelly/lato) packages.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}