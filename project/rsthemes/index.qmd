---
title: "ðŸ”® rsthemes"
description: "Full RStudio IDE and Syntax Themes"
author: Garrick Aden-Buie
date: '2020-10-01'
image: social-card.png
categories: ["Project"]
tags:
  - RStudio Theme
  - R Package
  - R
  - RStudio
links:
- icon: github # icon name without the 'fa-'
  name: Source
  url: https://github.com/gadenbuie/rsthemes
- icon: download # icon name without the 'fa-'
  name: Installation
  url: /project/rsthemes/#installation
- icon: info-circle-fill # icon name without the 'fa-'
  name: Usage
  url: /project/rsthemes/#usage
---

[gh]: https://github.com/gadenbuie/rsthemes

<!-- https://buttons.github.io/ -->
<a class="github-button" href="https://github.com/gadenbuie" data-show-count="true" aria-label="Follow @gadenbuie on GitHub">Follow &commat;gadenbuie</a>&nbsp;
<a class="github-button" href="https://github.com/gadenbuie/rsthemes" data-icon="octicon-star" data-show-count="true" aria-label="Star gadenbuie/rsthemes on GitHub">Star</a>&nbsp;
<a class="github-button" href="https://github.com/gadenbuie/rsthemes/fork" data-icon="octicon-repo-forked" data-show-count="true" aria-label="Fork gadenbuie/rsthemes on GitHub">Fork</a>

<p align=center>
  <img src="https://raw.githubusercontent.com/gadenbuie/rsthemes/assets/rsthemes.gif">
  <h1 align="center">{rsthemes}</h1>
</p>

```{r include=FALSE, eval=FALSE}
fragments <- paste0(
  "https://github.com/gadenbuie/rsthemes/raw/main/man/fragments/",
  c("installation", "usage", "theme-switching", "uninstall", "palettes"),
  ".Rmd"
)

for (frag_url in fragments) {
  download.file(frag_url, paste0("_", basename(frag_url)))
}
```

```{css echo=FALSE}
#rsthemes-list ul {
  padding-left: 0;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  align-items: end;
  grid-gap: 0.66em;
  max-width: 100%;
}

@media screen and (max-width: 400px) {
  #rsthemes-list ul {
    grid-template-columns: repeat(2, 1fr);
    font-size: 12px;
  }
}

#rsthemes-list li {
  list-style: none;
  position: relative;
}

#rsthemes-list .rstheme-name {
  font-size: 1.1em;
  margin-top: 0;
  padding-right: 50px;
  position: relative;
}

#rsthemes-list .style {
  position: absolute;
  bottom: 0;
  right: 0;
  color: var(--text-mild);
}

#rsthemes-buttons {
  margin-left: auto;
  margin-right: auto;
  width: max-content;
}

#rsthemes-buttons button {
  color: var(--textColorCustom);
  border-color: var(--textColorCustom);
  background-color: unset;
  display: inline-block;
  font-size: 1em;
  padding: 10px;
  padding-left: 35px;
  padding-right: 15px;
  margin-bottom: 1.5em;
  text-decoration: none;
  border-radius: 0;
  border-width: 1px;
  break-inside: avoid;
  white-space: nowrap;
  position: relative;
  text-align: left;
  opacity: 0.8;
  transition: opacity 0.2s ease-in-out;
}

#rsthemes-buttons button + button {
  margin-left: 10px;
}

#rsthemes-buttons button:hover,
#rsthemes-buttons button:active {
  opacity: 1;
}

#rsthemes-buttons .rsthemes-button-active,
#rsthemes-buttons .rsthemes-button-active:hover {
  color: var(--blue-30);
  border-color: var(--blue-30);
}

@media (prefers-color-scheme: dark) {
  #rsthemes-buttons .rsthemes-button-active,
  #rsthemes-buttons .rsthemes-button-active:hover {
    color: var(--blue-60);
    border-color: var(--blue-60);
  }
}

#rsthemes-buttons button.rsthemes-button-active::before {
  content: '\2713';
  position: absolute;
  left: 12px;
}

/* glightbox styles */
```


<script src="//cdnjs.cloudflare.com/ajax/libs/list.js/2.3.1/list.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css" />
<script src="https://cdn.jsdelivr.net/gh/mcstudios/glightbox/dist/js/glightbox.min.js"></script>

```{css echo=FALSE}
.gdesc-inner,
.glightbox-clean .gslide-description {
	background: transparent;
}

.glightbox-clean .gslide-title {
  color: var(--blue-100);
  font-size: 1.25em;
  text-align: center;
}

.gslide-media.gslide-image img {
  opacity: 1;
}
```

<div id="rsthemes-buttons" style="display:none;">
<button class="rsthemes-button-active" id="rsthemes-light" value="rsthemes-is-light">Light</button>
<button class="rsthemes-button-active" id="rsthemes-dark" value="rsthemes-is-dark">Dark</button>
<button id="rsthemes-base16" value="rsthemes-is-base16">Base 16</button>
</div>

<div id="rsthemes-list"><ul class="list"></ul></div>

```{js echo=FALSE}
const rsthemesOpts = {
  // valueNames: [
  //   'name',
  //   'style',
  //   { name: 'image', attr: 'src' },
  //   { name: 'glightbox', attr: 'href' }
  // ],
  item: function(values) {
    return `<li>
      <div class="rstheme-name"><div class="name">${values.name}</div><div class="style">${values.style}</div></div>

      <div class="rstheme-image">
        <a class="glightbox" href="${values.image}" data-title="${values.name}">
          <img src="${values.image}"  alt="${values.name} {rsthemes} (${values.style})"/>
        </a>
      </div>
    </li>`
  }
}

let rsthemesList = undefined
let lightbox = undefined
const btns = document.getElementById('rsthemes-buttons')

function filterRsthemesList() {
  if (typeof rsthemesList === 'undefined') return;
  let btn = btns.querySelectorAll('button')
  const state = {
    light: btn[0].classList.contains('rsthemes-button-active'),
    dark: btn[1].classList.contains('rsthemes-button-active'),
    base16: btn[2].classList.contains('rsthemes-button-active')
  }
  rsthemesList.filter(function(item) {
    const value = item.values()
    if (value.isBase16 && !state.base16) {
      return false
    }
    if (!state.light && !state.dark) {
      return true
    }
    if (value.isDark && state.dark) {
      return true
    }
    if (!value.isDark && state.light) {
      return true
    }
    return false
  })
  lightbox.setElements(document.querySelectorAll('.glightbox'))
}

const rsthemes = fetch("https://raw.githubusercontent.com/gadenbuie/rsthemes/assets/rsthemes.json")
  .then(response => response.json())
  .then(json => {
    json = json.map(t => {
      t.imageLink = t.image
      t.style = t.isDark ? 'Dark' : 'Light'
      t.name = t.name.replace(' {rsthemes}', '')
      return t
    }).
    sort(t => t.isBase16 ? 1 : -1)

    rsthemesList = new List('rsthemes-list', rsthemesOpts, json)
    lightbox = GLightbox({
      touchNavigation: true,
      descPosition: 'top'
    });

    lightbox.on('open', (target) => {
      debugger
      console.log('lightbox opened', {target});
    });
    btns.style.display = 'block'
    filterRsthemesList()
  })

btns.querySelectorAll('button').forEach(function(btn) {
  btn.addEventListener('click', function() {
    btn.classList.toggle('rsthemes-button-active')
    filterRsthemesList()
  })
})
```


## Installation

```{r child="_installation.Rmd"}
```

## Usage

```{r child="_usage.Rmd"}
```

## Easy Theme Switching

```{r child="_theme-switching.Rmd"}
```

## Uninstall

```{r child="_uninstall.Rmd"}
```

## Thanks and Theme Credits

### Palettes

```{r child="_palettes.Rmd"}
```

